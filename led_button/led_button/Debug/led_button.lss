
led_button.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000032  00800100  00000e10  00000ea4  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000e10  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000007  00800132  00800132  00000ed6  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00000ed6  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000f34  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000070  00000000  00000000  00000f70  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000f6e  00000000  00000000  00000fe0  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000934  00000000  00000000  00001f4e  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   0000064d  00000000  00000000  00002882  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000001cc  00000000  00000000  00002ed0  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000004b9  00000000  00000000  0000309c  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000924  00000000  00000000  00003555  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000060  00000000  00000000  00003e79  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	45 c0       	rjmp	.+138    	; 0x8c <__ctors_end>
   2:	00 00       	nop
   4:	89 c0       	rjmp	.+274    	; 0x118 <__vector_1>
   6:	00 00       	nop
   8:	e0 c0       	rjmp	.+448    	; 0x1ca <__vector_2>
   a:	00 00       	nop
   c:	19 c1       	rjmp	.+562    	; 0x240 <__vector_3>
   e:	00 00       	nop
  10:	52 c1       	rjmp	.+676    	; 0x2b6 <__vector_4>
  12:	00 00       	nop
  14:	8b c1       	rjmp	.+790    	; 0x32c <__vector_5>
  16:	00 00       	nop
  18:	c4 c1       	rjmp	.+904    	; 0x3a2 <__vector_6>
  1a:	00 00       	nop
  1c:	fd c1       	rjmp	.+1018   	; 0x418 <__vector_7>
  1e:	00 00       	nop
  20:	36 c2       	rjmp	.+1132   	; 0x48e <__vector_8>
  22:	00 00       	nop
  24:	50 c0       	rjmp	.+160    	; 0xc6 <__bad_interrupt>
  26:	00 00       	nop
  28:	4e c0       	rjmp	.+156    	; 0xc6 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	4c c0       	rjmp	.+152    	; 0xc6 <__bad_interrupt>
  2e:	00 00       	nop
  30:	4a c0       	rjmp	.+148    	; 0xc6 <__bad_interrupt>
  32:	00 00       	nop
  34:	48 c0       	rjmp	.+144    	; 0xc6 <__bad_interrupt>
  36:	00 00       	nop
  38:	46 c0       	rjmp	.+140    	; 0xc6 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	44 c0       	rjmp	.+136    	; 0xc6 <__bad_interrupt>
  3e:	00 00       	nop
  40:	42 c0       	rjmp	.+132    	; 0xc6 <__bad_interrupt>
  42:	00 00       	nop
  44:	40 c0       	rjmp	.+128    	; 0xc6 <__bad_interrupt>
  46:	00 00       	nop
  48:	3e c0       	rjmp	.+124    	; 0xc6 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	3c c0       	rjmp	.+120    	; 0xc6 <__bad_interrupt>
  4e:	00 00       	nop
  50:	3a c0       	rjmp	.+116    	; 0xc6 <__bad_interrupt>
  52:	00 00       	nop
  54:	38 c0       	rjmp	.+112    	; 0xc6 <__bad_interrupt>
  56:	00 00       	nop
  58:	36 c0       	rjmp	.+108    	; 0xc6 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	34 c0       	rjmp	.+104    	; 0xc6 <__bad_interrupt>
  5e:	00 00       	nop
  60:	32 c0       	rjmp	.+100    	; 0xc6 <__bad_interrupt>
  62:	00 00       	nop
  64:	30 c0       	rjmp	.+96     	; 0xc6 <__bad_interrupt>
  66:	00 00       	nop
  68:	2e c0       	rjmp	.+92     	; 0xc6 <__bad_interrupt>
  6a:	00 00       	nop
  6c:	2c c0       	rjmp	.+88     	; 0xc6 <__bad_interrupt>
  6e:	00 00       	nop
  70:	2a c0       	rjmp	.+84     	; 0xc6 <__bad_interrupt>
  72:	00 00       	nop
  74:	28 c0       	rjmp	.+80     	; 0xc6 <__bad_interrupt>
  76:	00 00       	nop
  78:	26 c0       	rjmp	.+76     	; 0xc6 <__bad_interrupt>
  7a:	00 00       	nop
  7c:	24 c0       	rjmp	.+72     	; 0xc6 <__bad_interrupt>
  7e:	00 00       	nop
  80:	22 c0       	rjmp	.+68     	; 0xc6 <__bad_interrupt>
  82:	00 00       	nop
  84:	20 c0       	rjmp	.+64     	; 0xc6 <__bad_interrupt>
  86:	00 00       	nop
  88:	1e c0       	rjmp	.+60     	; 0xc6 <__bad_interrupt>
	...

0000008c <__ctors_end>:
  8c:	11 24       	eor	r1, r1
  8e:	1f be       	out	0x3f, r1	; 63
  90:	cf ef       	ldi	r28, 0xFF	; 255
  92:	d0 e1       	ldi	r29, 0x10	; 16
  94:	de bf       	out	0x3e, r29	; 62
  96:	cd bf       	out	0x3d, r28	; 61

00000098 <__do_copy_data>:
  98:	11 e0       	ldi	r17, 0x01	; 1
  9a:	a0 e0       	ldi	r26, 0x00	; 0
  9c:	b1 e0       	ldi	r27, 0x01	; 1
  9e:	e0 e1       	ldi	r30, 0x10	; 16
  a0:	fe e0       	ldi	r31, 0x0E	; 14
  a2:	00 e0       	ldi	r16, 0x00	; 0
  a4:	0b bf       	out	0x3b, r16	; 59
  a6:	02 c0       	rjmp	.+4      	; 0xac <__do_copy_data+0x14>
  a8:	07 90       	elpm	r0, Z+
  aa:	0d 92       	st	X+, r0
  ac:	a2 33       	cpi	r26, 0x32	; 50
  ae:	b1 07       	cpc	r27, r17
  b0:	d9 f7       	brne	.-10     	; 0xa8 <__do_copy_data+0x10>

000000b2 <__do_clear_bss>:
  b2:	21 e0       	ldi	r18, 0x01	; 1
  b4:	a2 e3       	ldi	r26, 0x32	; 50
  b6:	b1 e0       	ldi	r27, 0x01	; 1
  b8:	01 c0       	rjmp	.+2      	; 0xbc <.do_clear_bss_start>

000000ba <.do_clear_bss_loop>:
  ba:	1d 92       	st	X+, r1

000000bc <.do_clear_bss_start>:
  bc:	a9 33       	cpi	r26, 0x39	; 57
  be:	b2 07       	cpc	r27, r18
  c0:	e1 f7       	brne	.-8      	; 0xba <.do_clear_bss_loop>
  c2:	20 d2       	rcall	.+1088   	; 0x504 <main>
  c4:	a3 c6       	rjmp	.+3398   	; 0xe0c <_exit>

000000c6 <__bad_interrupt>:
  c6:	9c cf       	rjmp	.-200    	; 0x0 <__vectors>

000000c8 <UART1_init>:
volatile int flag=0;
volatile int level = 1;

void UART1_init(void)
{
	UCSR1A |= (1 << U2X1);				// 2배속 모드
  c8:	eb e9       	ldi	r30, 0x9B	; 155
  ca:	f0 e0       	ldi	r31, 0x00	; 0
  cc:	80 81       	ld	r24, Z
  ce:	82 60       	ori	r24, 0x02	; 2
  d0:	80 83       	st	Z, r24
	UBRR1H = 0x00;
  d2:	10 92 98 00 	sts	0x0098, r1	; 0x800098 <__TEXT_REGION_LENGTH__+0x7e0098>
	UBRR1L = 207;					// 보율 9600
  d6:	8f ec       	ldi	r24, 0xCF	; 207
  d8:	80 93 99 00 	sts	0x0099, r24	; 0x800099 <__TEXT_REGION_LENGTH__+0x7e0099>
	UCSR1C |= (1 << UCSZ11) | (1 << UCSZ10);	// 데이터비트수 8비트로 설정
  dc:	ed e9       	ldi	r30, 0x9D	; 157
  de:	f0 e0       	ldi	r31, 0x00	; 0
  e0:	80 81       	ld	r24, Z
  e2:	86 60       	ori	r24, 0x06	; 6
  e4:	80 83       	st	Z, r24
	UCSR1B |= (1 << RXEN1)  | (1 << TXEN1);		// 송수신 활성화
  e6:	ea e9       	ldi	r30, 0x9A	; 154
  e8:	f0 e0       	ldi	r31, 0x00	; 0
  ea:	80 81       	ld	r24, Z
  ec:	88 61       	ori	r24, 0x18	; 24
  ee:	80 83       	st	Z, r24
  f0:	08 95       	ret

000000f2 <UART1_print_string>:
}
void UART1_print_string(char *str)			// 문자열 송신 함수
{
  f2:	bc 01       	movw	r22, r24
	for(int i=0; str[i];i++)			// '\0'문자를 만날 때까지 반복
  f4:	20 e0       	ldi	r18, 0x00	; 0
  f6:	30 e0       	ldi	r19, 0x00	; 0
  f8:	08 c0       	rjmp	.+16     	; 0x10a <UART1_print_string+0x18>
	{
		while( ! (UCSR1A & (1 << UDRE1)));	// 송신 가능 대기
  fa:	90 91 9b 00 	lds	r25, 0x009B	; 0x80009b <__TEXT_REGION_LENGTH__+0x7e009b>
  fe:	95 ff       	sbrs	r25, 5
 100:	fc cf       	rjmp	.-8      	; 0xfa <UART1_print_string+0x8>
		UDR1 = str[i];				// 1바이트 단위로 송신
 102:	40 93 9c 00 	sts	0x009C, r20	; 0x80009c <__TEXT_REGION_LENGTH__+0x7e009c>
	UCSR1C |= (1 << UCSZ11) | (1 << UCSZ10);	// 데이터비트수 8비트로 설정
	UCSR1B |= (1 << RXEN1)  | (1 << TXEN1);		// 송수신 활성화
}
void UART1_print_string(char *str)			// 문자열 송신 함수
{
	for(int i=0; str[i];i++)			// '\0'문자를 만날 때까지 반복
 106:	2f 5f       	subi	r18, 0xFF	; 255
 108:	3f 4f       	sbci	r19, 0xFF	; 255
 10a:	fb 01       	movw	r30, r22
 10c:	e2 0f       	add	r30, r18
 10e:	f3 1f       	adc	r31, r19
 110:	40 81       	ld	r20, Z
 112:	41 11       	cpse	r20, r1
 114:	f2 cf       	rjmp	.-28     	; 0xfa <UART1_print_string+0x8>
	{
		while( ! (UCSR1A & (1 << UDRE1)));	// 송신 가능 대기
		UDR1 = str[i];				// 1바이트 단위로 송신
	}
}
 116:	08 95       	ret

00000118 <__vector_1>:

ISR(INT0_vect)
{
 118:	1f 92       	push	r1
 11a:	0f 92       	push	r0
 11c:	0f b6       	in	r0, 0x3f	; 63
 11e:	0f 92       	push	r0
 120:	11 24       	eor	r1, r1
 122:	2f 93       	push	r18
 124:	3f 93       	push	r19
 126:	4f 93       	push	r20
 128:	5f 93       	push	r21
 12a:	8f 93       	push	r24
 12c:	9f 93       	push	r25
	if(flag == 0 & num == 0)
 12e:	40 91 32 01 	lds	r20, 0x0132	; 0x800132 <__data_end>
 132:	50 91 33 01 	lds	r21, 0x0133	; 0x800133 <__data_end+0x1>
 136:	20 91 34 01 	lds	r18, 0x0134	; 0x800134 <num>
 13a:	30 91 35 01 	lds	r19, 0x0135	; 0x800135 <num+0x1>
 13e:	91 e0       	ldi	r25, 0x01	; 1
 140:	45 2b       	or	r20, r21
 142:	09 f0       	breq	.+2      	; 0x146 <__vector_1+0x2e>
 144:	90 e0       	ldi	r25, 0x00	; 0
 146:	81 e0       	ldi	r24, 0x01	; 1
 148:	23 2b       	or	r18, r19
 14a:	09 f0       	breq	.+2      	; 0x14e <__vector_1+0x36>
 14c:	80 e0       	ldi	r24, 0x00	; 0
 14e:	89 23       	and	r24, r25
 150:	31 f0       	breq	.+12     	; 0x15e <__vector_1+0x46>
	{
		flag = 1;
 152:	81 e0       	ldi	r24, 0x01	; 1
 154:	90 e0       	ldi	r25, 0x00	; 0
 156:	90 93 33 01 	sts	0x0133, r25	; 0x800133 <__data_end+0x1>
 15a:	80 93 32 01 	sts	0x0132, r24	; 0x800132 <__data_end>
	}
	if (PINB == 0x01)
 15e:	86 b3       	in	r24, 0x16	; 22
 160:	81 30       	cpi	r24, 0x01	; 1
 162:	41 f5       	brne	.+80     	; 0x1b4 <__vector_1+0x9c>
	{
		PORTB = 0x00;
 164:	18 ba       	out	0x18, r1	; 24
		cnt += 1;
 166:	80 91 36 01 	lds	r24, 0x0136	; 0x800136 <cnt>
 16a:	90 91 37 01 	lds	r25, 0x0137	; 0x800137 <cnt+0x1>
 16e:	01 96       	adiw	r24, 0x01	; 1
 170:	90 93 37 01 	sts	0x0137, r25	; 0x800137 <cnt+0x1>
 174:	80 93 36 01 	sts	0x0136, r24	; 0x800136 <cnt>
		if (level == 1)	_delay_ms(500);
 178:	80 91 04 01 	lds	r24, 0x0104	; 0x800104 <level>
 17c:	90 91 05 01 	lds	r25, 0x0105	; 0x800105 <level+0x1>
 180:	01 97       	sbiw	r24, 0x01	; 1
 182:	49 f4       	brne	.+18     	; 0x196 <__vector_1+0x7e>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 184:	2f ef       	ldi	r18, 0xFF	; 255
 186:	89 e6       	ldi	r24, 0x69	; 105
 188:	98 e1       	ldi	r25, 0x18	; 24
 18a:	21 50       	subi	r18, 0x01	; 1
 18c:	80 40       	sbci	r24, 0x00	; 0
 18e:	90 40       	sbci	r25, 0x00	; 0
 190:	e1 f7       	brne	.-8      	; 0x18a <__vector_1+0x72>
 192:	00 c0       	rjmp	.+0      	; 0x194 <__vector_1+0x7c>
 194:	00 00       	nop
		if (level == 2)	_delay_ms(200);
 196:	80 91 04 01 	lds	r24, 0x0104	; 0x800104 <level>
 19a:	90 91 05 01 	lds	r25, 0x0105	; 0x800105 <level+0x1>
 19e:	02 97       	sbiw	r24, 0x02	; 2
 1a0:	49 f4       	brne	.+18     	; 0x1b4 <__vector_1+0x9c>
 1a2:	2f ef       	ldi	r18, 0xFF	; 255
 1a4:	83 ec       	ldi	r24, 0xC3	; 195
 1a6:	99 e0       	ldi	r25, 0x09	; 9
 1a8:	21 50       	subi	r18, 0x01	; 1
 1aa:	80 40       	sbci	r24, 0x00	; 0
 1ac:	90 40       	sbci	r25, 0x00	; 0
 1ae:	e1 f7       	brne	.-8      	; 0x1a8 <__vector_1+0x90>
 1b0:	00 c0       	rjmp	.+0      	; 0x1b2 <__vector_1+0x9a>
 1b2:	00 00       	nop
	}
}
 1b4:	9f 91       	pop	r25
 1b6:	8f 91       	pop	r24
 1b8:	5f 91       	pop	r21
 1ba:	4f 91       	pop	r20
 1bc:	3f 91       	pop	r19
 1be:	2f 91       	pop	r18
 1c0:	0f 90       	pop	r0
 1c2:	0f be       	out	0x3f, r0	; 63
 1c4:	0f 90       	pop	r0
 1c6:	1f 90       	pop	r1
 1c8:	18 95       	reti

000001ca <__vector_2>:
ISR(INT1_vect)
{
 1ca:	1f 92       	push	r1
 1cc:	0f 92       	push	r0
 1ce:	0f b6       	in	r0, 0x3f	; 63
 1d0:	0f 92       	push	r0
 1d2:	11 24       	eor	r1, r1
 1d4:	2f 93       	push	r18
 1d6:	8f 93       	push	r24
 1d8:	9f 93       	push	r25
	if (PINB == 0x02)
 1da:	86 b3       	in	r24, 0x16	; 22
 1dc:	82 30       	cpi	r24, 0x02	; 2
 1de:	41 f5       	brne	.+80     	; 0x230 <__vector_2+0x66>
	{
		PORTB = 0x00;
 1e0:	18 ba       	out	0x18, r1	; 24
		cnt += 1;
 1e2:	80 91 36 01 	lds	r24, 0x0136	; 0x800136 <cnt>
 1e6:	90 91 37 01 	lds	r25, 0x0137	; 0x800137 <cnt+0x1>
 1ea:	01 96       	adiw	r24, 0x01	; 1
 1ec:	90 93 37 01 	sts	0x0137, r25	; 0x800137 <cnt+0x1>
 1f0:	80 93 36 01 	sts	0x0136, r24	; 0x800136 <cnt>
		if (level == 1)	_delay_ms(500);
 1f4:	80 91 04 01 	lds	r24, 0x0104	; 0x800104 <level>
 1f8:	90 91 05 01 	lds	r25, 0x0105	; 0x800105 <level+0x1>
 1fc:	01 97       	sbiw	r24, 0x01	; 1
 1fe:	49 f4       	brne	.+18     	; 0x212 <__vector_2+0x48>
 200:	2f ef       	ldi	r18, 0xFF	; 255
 202:	89 e6       	ldi	r24, 0x69	; 105
 204:	98 e1       	ldi	r25, 0x18	; 24
 206:	21 50       	subi	r18, 0x01	; 1
 208:	80 40       	sbci	r24, 0x00	; 0
 20a:	90 40       	sbci	r25, 0x00	; 0
 20c:	e1 f7       	brne	.-8      	; 0x206 <__vector_2+0x3c>
 20e:	00 c0       	rjmp	.+0      	; 0x210 <__vector_2+0x46>
 210:	00 00       	nop
		if (level == 2)	_delay_ms(200);
 212:	80 91 04 01 	lds	r24, 0x0104	; 0x800104 <level>
 216:	90 91 05 01 	lds	r25, 0x0105	; 0x800105 <level+0x1>
 21a:	02 97       	sbiw	r24, 0x02	; 2
 21c:	49 f4       	brne	.+18     	; 0x230 <__vector_2+0x66>
 21e:	2f ef       	ldi	r18, 0xFF	; 255
 220:	83 ec       	ldi	r24, 0xC3	; 195
 222:	99 e0       	ldi	r25, 0x09	; 9
 224:	21 50       	subi	r18, 0x01	; 1
 226:	80 40       	sbci	r24, 0x00	; 0
 228:	90 40       	sbci	r25, 0x00	; 0
 22a:	e1 f7       	brne	.-8      	; 0x224 <__vector_2+0x5a>
 22c:	00 c0       	rjmp	.+0      	; 0x22e <__vector_2+0x64>
 22e:	00 00       	nop
	}
}
 230:	9f 91       	pop	r25
 232:	8f 91       	pop	r24
 234:	2f 91       	pop	r18
 236:	0f 90       	pop	r0
 238:	0f be       	out	0x3f, r0	; 63
 23a:	0f 90       	pop	r0
 23c:	1f 90       	pop	r1
 23e:	18 95       	reti

00000240 <__vector_3>:
ISR(INT2_vect)
{
 240:	1f 92       	push	r1
 242:	0f 92       	push	r0
 244:	0f b6       	in	r0, 0x3f	; 63
 246:	0f 92       	push	r0
 248:	11 24       	eor	r1, r1
 24a:	2f 93       	push	r18
 24c:	8f 93       	push	r24
 24e:	9f 93       	push	r25
	if (PINB == 0x04)
 250:	86 b3       	in	r24, 0x16	; 22
 252:	84 30       	cpi	r24, 0x04	; 4
 254:	41 f5       	brne	.+80     	; 0x2a6 <__vector_3+0x66>
	{
		PORTB = 0x00;
 256:	18 ba       	out	0x18, r1	; 24
		cnt += 1;
 258:	80 91 36 01 	lds	r24, 0x0136	; 0x800136 <cnt>
 25c:	90 91 37 01 	lds	r25, 0x0137	; 0x800137 <cnt+0x1>
 260:	01 96       	adiw	r24, 0x01	; 1
 262:	90 93 37 01 	sts	0x0137, r25	; 0x800137 <cnt+0x1>
 266:	80 93 36 01 	sts	0x0136, r24	; 0x800136 <cnt>
		if (level == 1)	_delay_ms(500);
 26a:	80 91 04 01 	lds	r24, 0x0104	; 0x800104 <level>
 26e:	90 91 05 01 	lds	r25, 0x0105	; 0x800105 <level+0x1>
 272:	01 97       	sbiw	r24, 0x01	; 1
 274:	49 f4       	brne	.+18     	; 0x288 <__vector_3+0x48>
 276:	2f ef       	ldi	r18, 0xFF	; 255
 278:	89 e6       	ldi	r24, 0x69	; 105
 27a:	98 e1       	ldi	r25, 0x18	; 24
 27c:	21 50       	subi	r18, 0x01	; 1
 27e:	80 40       	sbci	r24, 0x00	; 0
 280:	90 40       	sbci	r25, 0x00	; 0
 282:	e1 f7       	brne	.-8      	; 0x27c <__vector_3+0x3c>
 284:	00 c0       	rjmp	.+0      	; 0x286 <__vector_3+0x46>
 286:	00 00       	nop
		if (level == 2)	_delay_ms(200);
 288:	80 91 04 01 	lds	r24, 0x0104	; 0x800104 <level>
 28c:	90 91 05 01 	lds	r25, 0x0105	; 0x800105 <level+0x1>
 290:	02 97       	sbiw	r24, 0x02	; 2
 292:	49 f4       	brne	.+18     	; 0x2a6 <__vector_3+0x66>
 294:	2f ef       	ldi	r18, 0xFF	; 255
 296:	83 ec       	ldi	r24, 0xC3	; 195
 298:	99 e0       	ldi	r25, 0x09	; 9
 29a:	21 50       	subi	r18, 0x01	; 1
 29c:	80 40       	sbci	r24, 0x00	; 0
 29e:	90 40       	sbci	r25, 0x00	; 0
 2a0:	e1 f7       	brne	.-8      	; 0x29a <__vector_3+0x5a>
 2a2:	00 c0       	rjmp	.+0      	; 0x2a4 <__vector_3+0x64>
 2a4:	00 00       	nop
	}
}
 2a6:	9f 91       	pop	r25
 2a8:	8f 91       	pop	r24
 2aa:	2f 91       	pop	r18
 2ac:	0f 90       	pop	r0
 2ae:	0f be       	out	0x3f, r0	; 63
 2b0:	0f 90       	pop	r0
 2b2:	1f 90       	pop	r1
 2b4:	18 95       	reti

000002b6 <__vector_4>:
ISR(INT3_vect)
{
 2b6:	1f 92       	push	r1
 2b8:	0f 92       	push	r0
 2ba:	0f b6       	in	r0, 0x3f	; 63
 2bc:	0f 92       	push	r0
 2be:	11 24       	eor	r1, r1
 2c0:	2f 93       	push	r18
 2c2:	8f 93       	push	r24
 2c4:	9f 93       	push	r25
	if (PINB == 0x08)
 2c6:	86 b3       	in	r24, 0x16	; 22
 2c8:	88 30       	cpi	r24, 0x08	; 8
 2ca:	41 f5       	brne	.+80     	; 0x31c <__vector_4+0x66>
	{
		PORTB = 0x00;
 2cc:	18 ba       	out	0x18, r1	; 24
		cnt += 1;
 2ce:	80 91 36 01 	lds	r24, 0x0136	; 0x800136 <cnt>
 2d2:	90 91 37 01 	lds	r25, 0x0137	; 0x800137 <cnt+0x1>
 2d6:	01 96       	adiw	r24, 0x01	; 1
 2d8:	90 93 37 01 	sts	0x0137, r25	; 0x800137 <cnt+0x1>
 2dc:	80 93 36 01 	sts	0x0136, r24	; 0x800136 <cnt>
		if (level == 1)	_delay_ms(500);
 2e0:	80 91 04 01 	lds	r24, 0x0104	; 0x800104 <level>
 2e4:	90 91 05 01 	lds	r25, 0x0105	; 0x800105 <level+0x1>
 2e8:	01 97       	sbiw	r24, 0x01	; 1
 2ea:	49 f4       	brne	.+18     	; 0x2fe <__vector_4+0x48>
 2ec:	2f ef       	ldi	r18, 0xFF	; 255
 2ee:	89 e6       	ldi	r24, 0x69	; 105
 2f0:	98 e1       	ldi	r25, 0x18	; 24
 2f2:	21 50       	subi	r18, 0x01	; 1
 2f4:	80 40       	sbci	r24, 0x00	; 0
 2f6:	90 40       	sbci	r25, 0x00	; 0
 2f8:	e1 f7       	brne	.-8      	; 0x2f2 <__vector_4+0x3c>
 2fa:	00 c0       	rjmp	.+0      	; 0x2fc <__vector_4+0x46>
 2fc:	00 00       	nop
		if (level == 2)	_delay_ms(200);
 2fe:	80 91 04 01 	lds	r24, 0x0104	; 0x800104 <level>
 302:	90 91 05 01 	lds	r25, 0x0105	; 0x800105 <level+0x1>
 306:	02 97       	sbiw	r24, 0x02	; 2
 308:	49 f4       	brne	.+18     	; 0x31c <__vector_4+0x66>
 30a:	2f ef       	ldi	r18, 0xFF	; 255
 30c:	83 ec       	ldi	r24, 0xC3	; 195
 30e:	99 e0       	ldi	r25, 0x09	; 9
 310:	21 50       	subi	r18, 0x01	; 1
 312:	80 40       	sbci	r24, 0x00	; 0
 314:	90 40       	sbci	r25, 0x00	; 0
 316:	e1 f7       	brne	.-8      	; 0x310 <__vector_4+0x5a>
 318:	00 c0       	rjmp	.+0      	; 0x31a <__vector_4+0x64>
 31a:	00 00       	nop
	}
}
 31c:	9f 91       	pop	r25
 31e:	8f 91       	pop	r24
 320:	2f 91       	pop	r18
 322:	0f 90       	pop	r0
 324:	0f be       	out	0x3f, r0	; 63
 326:	0f 90       	pop	r0
 328:	1f 90       	pop	r1
 32a:	18 95       	reti

0000032c <__vector_5>:
ISR(INT4_vect)
{
 32c:	1f 92       	push	r1
 32e:	0f 92       	push	r0
 330:	0f b6       	in	r0, 0x3f	; 63
 332:	0f 92       	push	r0
 334:	11 24       	eor	r1, r1
 336:	2f 93       	push	r18
 338:	8f 93       	push	r24
 33a:	9f 93       	push	r25
	if (PINB == 0x10)
 33c:	86 b3       	in	r24, 0x16	; 22
 33e:	80 31       	cpi	r24, 0x10	; 16
 340:	41 f5       	brne	.+80     	; 0x392 <__vector_5+0x66>
	{
		PORTB = 0x00;
 342:	18 ba       	out	0x18, r1	; 24
		cnt += 1;
 344:	80 91 36 01 	lds	r24, 0x0136	; 0x800136 <cnt>
 348:	90 91 37 01 	lds	r25, 0x0137	; 0x800137 <cnt+0x1>
 34c:	01 96       	adiw	r24, 0x01	; 1
 34e:	90 93 37 01 	sts	0x0137, r25	; 0x800137 <cnt+0x1>
 352:	80 93 36 01 	sts	0x0136, r24	; 0x800136 <cnt>
		if (level == 1)	_delay_ms(500);
 356:	80 91 04 01 	lds	r24, 0x0104	; 0x800104 <level>
 35a:	90 91 05 01 	lds	r25, 0x0105	; 0x800105 <level+0x1>
 35e:	01 97       	sbiw	r24, 0x01	; 1
 360:	49 f4       	brne	.+18     	; 0x374 <__vector_5+0x48>
 362:	2f ef       	ldi	r18, 0xFF	; 255
 364:	89 e6       	ldi	r24, 0x69	; 105
 366:	98 e1       	ldi	r25, 0x18	; 24
 368:	21 50       	subi	r18, 0x01	; 1
 36a:	80 40       	sbci	r24, 0x00	; 0
 36c:	90 40       	sbci	r25, 0x00	; 0
 36e:	e1 f7       	brne	.-8      	; 0x368 <__vector_5+0x3c>
 370:	00 c0       	rjmp	.+0      	; 0x372 <__vector_5+0x46>
 372:	00 00       	nop
		if (level == 2)	_delay_ms(200);
 374:	80 91 04 01 	lds	r24, 0x0104	; 0x800104 <level>
 378:	90 91 05 01 	lds	r25, 0x0105	; 0x800105 <level+0x1>
 37c:	02 97       	sbiw	r24, 0x02	; 2
 37e:	49 f4       	brne	.+18     	; 0x392 <__vector_5+0x66>
 380:	2f ef       	ldi	r18, 0xFF	; 255
 382:	83 ec       	ldi	r24, 0xC3	; 195
 384:	99 e0       	ldi	r25, 0x09	; 9
 386:	21 50       	subi	r18, 0x01	; 1
 388:	80 40       	sbci	r24, 0x00	; 0
 38a:	90 40       	sbci	r25, 0x00	; 0
 38c:	e1 f7       	brne	.-8      	; 0x386 <__vector_5+0x5a>
 38e:	00 c0       	rjmp	.+0      	; 0x390 <__vector_5+0x64>
 390:	00 00       	nop
	}
}
 392:	9f 91       	pop	r25
 394:	8f 91       	pop	r24
 396:	2f 91       	pop	r18
 398:	0f 90       	pop	r0
 39a:	0f be       	out	0x3f, r0	; 63
 39c:	0f 90       	pop	r0
 39e:	1f 90       	pop	r1
 3a0:	18 95       	reti

000003a2 <__vector_6>:
ISR(INT5_vect)
{
 3a2:	1f 92       	push	r1
 3a4:	0f 92       	push	r0
 3a6:	0f b6       	in	r0, 0x3f	; 63
 3a8:	0f 92       	push	r0
 3aa:	11 24       	eor	r1, r1
 3ac:	2f 93       	push	r18
 3ae:	8f 93       	push	r24
 3b0:	9f 93       	push	r25
	if (PINB == 0x20)
 3b2:	86 b3       	in	r24, 0x16	; 22
 3b4:	80 32       	cpi	r24, 0x20	; 32
 3b6:	41 f5       	brne	.+80     	; 0x408 <__LOCK_REGION_LENGTH__+0x8>
	{
		PORTB = 0x00;
 3b8:	18 ba       	out	0x18, r1	; 24
		cnt += 1;
 3ba:	80 91 36 01 	lds	r24, 0x0136	; 0x800136 <cnt>
 3be:	90 91 37 01 	lds	r25, 0x0137	; 0x800137 <cnt+0x1>
 3c2:	01 96       	adiw	r24, 0x01	; 1
 3c4:	90 93 37 01 	sts	0x0137, r25	; 0x800137 <cnt+0x1>
 3c8:	80 93 36 01 	sts	0x0136, r24	; 0x800136 <cnt>
		if (level == 1)	_delay_ms(500);
 3cc:	80 91 04 01 	lds	r24, 0x0104	; 0x800104 <level>
 3d0:	90 91 05 01 	lds	r25, 0x0105	; 0x800105 <level+0x1>
 3d4:	01 97       	sbiw	r24, 0x01	; 1
 3d6:	49 f4       	brne	.+18     	; 0x3ea <__vector_6+0x48>
 3d8:	2f ef       	ldi	r18, 0xFF	; 255
 3da:	89 e6       	ldi	r24, 0x69	; 105
 3dc:	98 e1       	ldi	r25, 0x18	; 24
 3de:	21 50       	subi	r18, 0x01	; 1
 3e0:	80 40       	sbci	r24, 0x00	; 0
 3e2:	90 40       	sbci	r25, 0x00	; 0
 3e4:	e1 f7       	brne	.-8      	; 0x3de <__vector_6+0x3c>
 3e6:	00 c0       	rjmp	.+0      	; 0x3e8 <__vector_6+0x46>
 3e8:	00 00       	nop
		if (level == 2)	_delay_ms(200);
 3ea:	80 91 04 01 	lds	r24, 0x0104	; 0x800104 <level>
 3ee:	90 91 05 01 	lds	r25, 0x0105	; 0x800105 <level+0x1>
 3f2:	02 97       	sbiw	r24, 0x02	; 2
 3f4:	49 f4       	brne	.+18     	; 0x408 <__LOCK_REGION_LENGTH__+0x8>
 3f6:	2f ef       	ldi	r18, 0xFF	; 255
 3f8:	83 ec       	ldi	r24, 0xC3	; 195
 3fa:	99 e0       	ldi	r25, 0x09	; 9
 3fc:	21 50       	subi	r18, 0x01	; 1
 3fe:	80 40       	sbci	r24, 0x00	; 0
 400:	90 40       	sbci	r25, 0x00	; 0
 402:	e1 f7       	brne	.-8      	; 0x3fc <__vector_6+0x5a>
 404:	00 c0       	rjmp	.+0      	; 0x406 <__LOCK_REGION_LENGTH__+0x6>
 406:	00 00       	nop
	}
}
 408:	9f 91       	pop	r25
 40a:	8f 91       	pop	r24
 40c:	2f 91       	pop	r18
 40e:	0f 90       	pop	r0
 410:	0f be       	out	0x3f, r0	; 63
 412:	0f 90       	pop	r0
 414:	1f 90       	pop	r1
 416:	18 95       	reti

00000418 <__vector_7>:
ISR(INT6_vect)
{
 418:	1f 92       	push	r1
 41a:	0f 92       	push	r0
 41c:	0f b6       	in	r0, 0x3f	; 63
 41e:	0f 92       	push	r0
 420:	11 24       	eor	r1, r1
 422:	2f 93       	push	r18
 424:	8f 93       	push	r24
 426:	9f 93       	push	r25
	if (PINB == 0x40)
 428:	86 b3       	in	r24, 0x16	; 22
 42a:	80 34       	cpi	r24, 0x40	; 64
 42c:	41 f5       	brne	.+80     	; 0x47e <__vector_7+0x66>
	{
		PORTB = 0x00;
 42e:	18 ba       	out	0x18, r1	; 24
		cnt += 1;
 430:	80 91 36 01 	lds	r24, 0x0136	; 0x800136 <cnt>
 434:	90 91 37 01 	lds	r25, 0x0137	; 0x800137 <cnt+0x1>
 438:	01 96       	adiw	r24, 0x01	; 1
 43a:	90 93 37 01 	sts	0x0137, r25	; 0x800137 <cnt+0x1>
 43e:	80 93 36 01 	sts	0x0136, r24	; 0x800136 <cnt>
		if (level == 1)	_delay_ms(500);
 442:	80 91 04 01 	lds	r24, 0x0104	; 0x800104 <level>
 446:	90 91 05 01 	lds	r25, 0x0105	; 0x800105 <level+0x1>
 44a:	01 97       	sbiw	r24, 0x01	; 1
 44c:	49 f4       	brne	.+18     	; 0x460 <__vector_7+0x48>
 44e:	2f ef       	ldi	r18, 0xFF	; 255
 450:	89 e6       	ldi	r24, 0x69	; 105
 452:	98 e1       	ldi	r25, 0x18	; 24
 454:	21 50       	subi	r18, 0x01	; 1
 456:	80 40       	sbci	r24, 0x00	; 0
 458:	90 40       	sbci	r25, 0x00	; 0
 45a:	e1 f7       	brne	.-8      	; 0x454 <__vector_7+0x3c>
 45c:	00 c0       	rjmp	.+0      	; 0x45e <__vector_7+0x46>
 45e:	00 00       	nop
		if (level == 2)	_delay_ms(200);
 460:	80 91 04 01 	lds	r24, 0x0104	; 0x800104 <level>
 464:	90 91 05 01 	lds	r25, 0x0105	; 0x800105 <level+0x1>
 468:	02 97       	sbiw	r24, 0x02	; 2
 46a:	49 f4       	brne	.+18     	; 0x47e <__vector_7+0x66>
 46c:	2f ef       	ldi	r18, 0xFF	; 255
 46e:	83 ec       	ldi	r24, 0xC3	; 195
 470:	99 e0       	ldi	r25, 0x09	; 9
 472:	21 50       	subi	r18, 0x01	; 1
 474:	80 40       	sbci	r24, 0x00	; 0
 476:	90 40       	sbci	r25, 0x00	; 0
 478:	e1 f7       	brne	.-8      	; 0x472 <__vector_7+0x5a>
 47a:	00 c0       	rjmp	.+0      	; 0x47c <__vector_7+0x64>
 47c:	00 00       	nop
	}
}
 47e:	9f 91       	pop	r25
 480:	8f 91       	pop	r24
 482:	2f 91       	pop	r18
 484:	0f 90       	pop	r0
 486:	0f be       	out	0x3f, r0	; 63
 488:	0f 90       	pop	r0
 48a:	1f 90       	pop	r1
 48c:	18 95       	reti

0000048e <__vector_8>:
ISR(INT7_vect)
{
 48e:	1f 92       	push	r1
 490:	0f 92       	push	r0
 492:	0f b6       	in	r0, 0x3f	; 63
 494:	0f 92       	push	r0
 496:	11 24       	eor	r1, r1
 498:	2f 93       	push	r18
 49a:	8f 93       	push	r24
 49c:	9f 93       	push	r25
	if (PINB == 0x80)
 49e:	86 b3       	in	r24, 0x16	; 22
 4a0:	80 38       	cpi	r24, 0x80	; 128
 4a2:	41 f5       	brne	.+80     	; 0x4f4 <__vector_8+0x66>
	{
		PORTB = 0x00;
 4a4:	18 ba       	out	0x18, r1	; 24
		cnt += 1;
 4a6:	80 91 36 01 	lds	r24, 0x0136	; 0x800136 <cnt>
 4aa:	90 91 37 01 	lds	r25, 0x0137	; 0x800137 <cnt+0x1>
 4ae:	01 96       	adiw	r24, 0x01	; 1
 4b0:	90 93 37 01 	sts	0x0137, r25	; 0x800137 <cnt+0x1>
 4b4:	80 93 36 01 	sts	0x0136, r24	; 0x800136 <cnt>
		if (level == 1)	_delay_ms(500);
 4b8:	80 91 04 01 	lds	r24, 0x0104	; 0x800104 <level>
 4bc:	90 91 05 01 	lds	r25, 0x0105	; 0x800105 <level+0x1>
 4c0:	01 97       	sbiw	r24, 0x01	; 1
 4c2:	49 f4       	brne	.+18     	; 0x4d6 <__vector_8+0x48>
 4c4:	2f ef       	ldi	r18, 0xFF	; 255
 4c6:	89 e6       	ldi	r24, 0x69	; 105
 4c8:	98 e1       	ldi	r25, 0x18	; 24
 4ca:	21 50       	subi	r18, 0x01	; 1
 4cc:	80 40       	sbci	r24, 0x00	; 0
 4ce:	90 40       	sbci	r25, 0x00	; 0
 4d0:	e1 f7       	brne	.-8      	; 0x4ca <__vector_8+0x3c>
 4d2:	00 c0       	rjmp	.+0      	; 0x4d4 <__vector_8+0x46>
 4d4:	00 00       	nop
		if (level == 2)	_delay_ms(200);
 4d6:	80 91 04 01 	lds	r24, 0x0104	; 0x800104 <level>
 4da:	90 91 05 01 	lds	r25, 0x0105	; 0x800105 <level+0x1>
 4de:	02 97       	sbiw	r24, 0x02	; 2
 4e0:	49 f4       	brne	.+18     	; 0x4f4 <__vector_8+0x66>
 4e2:	2f ef       	ldi	r18, 0xFF	; 255
 4e4:	83 ec       	ldi	r24, 0xC3	; 195
 4e6:	99 e0       	ldi	r25, 0x09	; 9
 4e8:	21 50       	subi	r18, 0x01	; 1
 4ea:	80 40       	sbci	r24, 0x00	; 0
 4ec:	90 40       	sbci	r25, 0x00	; 0
 4ee:	e1 f7       	brne	.-8      	; 0x4e8 <__vector_8+0x5a>
 4f0:	00 c0       	rjmp	.+0      	; 0x4f2 <__vector_8+0x64>
 4f2:	00 00       	nop
	}
}
 4f4:	9f 91       	pop	r25
 4f6:	8f 91       	pop	r24
 4f8:	2f 91       	pop	r18
 4fa:	0f 90       	pop	r0
 4fc:	0f be       	out	0x3f, r0	; 63
 4fe:	0f 90       	pop	r0
 500:	1f 90       	pop	r1
 502:	18 95       	reti

00000504 <main>:

int main(void)
{
 504:	0f 93       	push	r16
 506:	1f 93       	push	r17
 508:	cf 93       	push	r28
 50a:	df 93       	push	r29
 50c:	cd b7       	in	r28, 0x3d	; 61
 50e:	de b7       	in	r29, 0x3e	; 62
 510:	6e 97       	sbiw	r28, 0x1e	; 30
 512:	0f b6       	in	r0, 0x3f	; 63
 514:	f8 94       	cli
 516:	de bf       	out	0x3e, r29	; 62
 518:	0f be       	out	0x3f, r0	; 63
 51a:	cd bf       	out	0x3d, r28	; 61
	DDRB = 0xFF;
 51c:	8f ef       	ldi	r24, 0xFF	; 255
 51e:	87 bb       	out	0x17, r24	; 23
	cli();
 520:	f8 94       	cli
	EICRA = 0xFF;
 522:	80 93 6a 00 	sts	0x006A, r24	; 0x80006a <__TEXT_REGION_LENGTH__+0x7e006a>
	EICRB = 0xFF;
 526:	8a bf       	out	0x3a, r24	; 58
	EIMSK = 0xFF;
 528:	89 bf       	out	0x39, r24	; 57
	sei();
 52a:	78 94       	sei
	
	int i;
	char buff[10]="";
 52c:	1a 82       	std	Y+2, r1	; 0x02
 52e:	19 82       	std	Y+1, r1	; 0x01
 530:	88 e0       	ldi	r24, 0x08	; 8
 532:	fe 01       	movw	r30, r28
 534:	33 96       	adiw	r30, 0x03	; 3
 536:	df 01       	movw	r26, r30
 538:	28 2f       	mov	r18, r24
 53a:	1d 92       	st	X+, r1
 53c:	2a 95       	dec	r18
 53e:	e9 f7       	brne	.-6      	; 0x53a <main+0x36>
	char buff2[10]="";
 540:	1c 86       	std	Y+12, r1	; 0x0c
 542:	1b 86       	std	Y+11, r1	; 0x0b
 544:	3a 96       	adiw	r30, 0x0a	; 10
 546:	df 01       	movw	r26, r30
 548:	28 2f       	mov	r18, r24
 54a:	1d 92       	st	X+, r1
 54c:	2a 95       	dec	r18
 54e:	e9 f7       	brne	.-6      	; 0x54a <main+0x46>
	char buff3[10]="";
 550:	1e 8a       	std	Y+22, r1	; 0x16
 552:	1d 8a       	std	Y+21, r1	; 0x15
 554:	3a 96       	adiw	r30, 0x0a	; 10
 556:	df 01       	movw	r26, r30
 558:	1d 92       	st	X+, r1
 55a:	8a 95       	dec	r24
 55c:	e9 f7       	brne	.-6      	; 0x558 <main+0x54>

	
	UART1_init();
 55e:	b4 dd       	rcall	.-1176   	; 0xc8 <UART1_init>
	while (1)
	{
		if(flag == 1)
 560:	80 91 32 01 	lds	r24, 0x0132	; 0x800132 <__data_end>
 564:	90 91 33 01 	lds	r25, 0x0133	; 0x800133 <__data_end+0x1>
 568:	01 97       	sbiw	r24, 0x01	; 1
 56a:	d1 f7       	brne	.-12     	; 0x560 <main+0x5c>
		{
			if (num == 30)	break;
 56c:	80 91 34 01 	lds	r24, 0x0134	; 0x800134 <num>
 570:	90 91 35 01 	lds	r25, 0x0135	; 0x800135 <num+0x1>
 574:	4e 97       	sbiw	r24, 0x1e	; 30
 576:	09 f4       	brne	.+2      	; 0x57a <main+0x76>
 578:	ac c0       	rjmp	.+344    	; 0x6d2 <main+0x1ce>
			num += 1;
 57a:	80 91 34 01 	lds	r24, 0x0134	; 0x800134 <num>
 57e:	90 91 35 01 	lds	r25, 0x0135	; 0x800135 <num+0x1>
 582:	01 96       	adiw	r24, 0x01	; 1
 584:	90 93 35 01 	sts	0x0135, r25	; 0x800135 <num+0x1>
 588:	80 93 34 01 	sts	0x0134, r24	; 0x800134 <num>
			sprintf(buff,"num: %d\r",num);
 58c:	80 91 34 01 	lds	r24, 0x0134	; 0x800134 <num>
 590:	90 91 35 01 	lds	r25, 0x0135	; 0x800135 <num+0x1>
 594:	9f 93       	push	r25
 596:	8f 93       	push	r24
 598:	86 e0       	ldi	r24, 0x06	; 6
 59a:	91 e0       	ldi	r25, 0x01	; 1
 59c:	9f 93       	push	r25
 59e:	8f 93       	push	r24
 5a0:	8e 01       	movw	r16, r28
 5a2:	0f 5f       	subi	r16, 0xFF	; 255
 5a4:	1f 4f       	sbci	r17, 0xFF	; 255
 5a6:	1f 93       	push	r17
 5a8:	0f 93       	push	r16
 5aa:	f8 d0       	rcall	.+496    	; 0x79c <sprintf>
			UART1_print_string(buff);
 5ac:	c8 01       	movw	r24, r16
 5ae:	a1 dd       	rcall	.-1214   	; 0xf2 <UART1_print_string>
			ran = rand()%8;
 5b0:	e7 d0       	rcall	.+462    	; 0x780 <rand>
 5b2:	87 70       	andi	r24, 0x07	; 7
 5b4:	90 78       	andi	r25, 0x80	; 128
 5b6:	0f 90       	pop	r0
 5b8:	0f 90       	pop	r0
 5ba:	0f 90       	pop	r0
 5bc:	0f 90       	pop	r0
 5be:	0f 90       	pop	r0
 5c0:	0f 90       	pop	r0
 5c2:	99 23       	and	r25, r25
 5c4:	24 f4       	brge	.+8      	; 0x5ce <main+0xca>
 5c6:	01 97       	sbiw	r24, 0x01	; 1
 5c8:	88 6f       	ori	r24, 0xF8	; 248
 5ca:	9f 6f       	ori	r25, 0xFF	; 255
 5cc:	01 96       	adiw	r24, 0x01	; 1
 5ce:	80 93 38 01 	sts	0x0138, r24	; 0x800138 <ran>
 5d2:	1f 92       	push	r1
			sprintf(buff3,"ran: %d\r",ran);
 5d4:	8f 93       	push	r24
 5d6:	8f e0       	ldi	r24, 0x0F	; 15
 5d8:	91 e0       	ldi	r25, 0x01	; 1
 5da:	9f 93       	push	r25
 5dc:	8f 93       	push	r24
 5de:	8e 01       	movw	r16, r28
 5e0:	0b 5e       	subi	r16, 0xEB	; 235
 5e2:	1f 4f       	sbci	r17, 0xFF	; 255
 5e4:	1f 93       	push	r17
 5e6:	0f 93       	push	r16
 5e8:	d9 d0       	rcall	.+434    	; 0x79c <sprintf>
			UART1_print_string(buff3);
 5ea:	c8 01       	movw	r24, r16
 5ec:	82 dd       	rcall	.-1276   	; 0xf2 <UART1_print_string>
 5ee:	80 91 04 01 	lds	r24, 0x0104	; 0x800104 <level>
			if (level == 1)
 5f2:	90 91 05 01 	lds	r25, 0x0105	; 0x800105 <level+0x1>
 5f6:	0f 90       	pop	r0
 5f8:	0f 90       	pop	r0
 5fa:	0f 90       	pop	r0
 5fc:	0f 90       	pop	r0
 5fe:	0f 90       	pop	r0
 600:	0f 90       	pop	r0
 602:	01 97       	sbiw	r24, 0x01	; 1
 604:	e9 f4       	brne	.+58     	; 0x640 <main+0x13c>
 606:	81 e0       	ldi	r24, 0x01	; 1
			{
				PORTB = 0x01<<ran;
 608:	90 e0       	ldi	r25, 0x00	; 0
 60a:	00 90 38 01 	lds	r0, 0x0138	; 0x800138 <ran>
 60e:	02 c0       	rjmp	.+4      	; 0x614 <main+0x110>
 610:	88 0f       	add	r24, r24
 612:	99 1f       	adc	r25, r25
 614:	0a 94       	dec	r0
 616:	e2 f7       	brpl	.-8      	; 0x610 <main+0x10c>
 618:	88 bb       	out	0x18, r24	; 24
 61a:	bf ef       	ldi	r27, 0xFF	; 255
 61c:	29 e6       	ldi	r18, 0x69	; 105
 61e:	88 e1       	ldi	r24, 0x18	; 24
 620:	b1 50       	subi	r27, 0x01	; 1
 622:	20 40       	sbci	r18, 0x00	; 0
 624:	80 40       	sbci	r24, 0x00	; 0
 626:	e1 f7       	brne	.-8      	; 0x620 <main+0x11c>
 628:	00 c0       	rjmp	.+0      	; 0x62a <main+0x126>
 62a:	00 00       	nop
 62c:	18 ba       	out	0x18, r1	; 24
				_delay_ms(500);
				PORTB = 0x00;
 62e:	9f ef       	ldi	r25, 0xFF	; 255
 630:	a9 e6       	ldi	r26, 0x69	; 105
 632:	b8 e1       	ldi	r27, 0x18	; 24
 634:	91 50       	subi	r25, 0x01	; 1
 636:	a0 40       	sbci	r26, 0x00	; 0
 638:	b0 40       	sbci	r27, 0x00	; 0
 63a:	e1 f7       	brne	.-8      	; 0x634 <main+0x130>
 63c:	00 c0       	rjmp	.+0      	; 0x63e <main+0x13a>
 63e:	00 00       	nop
 640:	80 91 04 01 	lds	r24, 0x0104	; 0x800104 <level>
				_delay_ms(500);
			}
			if (level == 2)
 644:	90 91 05 01 	lds	r25, 0x0105	; 0x800105 <level+0x1>
 648:	02 97       	sbiw	r24, 0x02	; 2
 64a:	e9 f4       	brne	.+58     	; 0x686 <main+0x182>
 64c:	81 e0       	ldi	r24, 0x01	; 1
			{
				PORTB = 0x01<<ran;
 64e:	90 e0       	ldi	r25, 0x00	; 0
 650:	00 90 38 01 	lds	r0, 0x0138	; 0x800138 <ran>
 654:	02 c0       	rjmp	.+4      	; 0x65a <main+0x156>
 656:	88 0f       	add	r24, r24
 658:	99 1f       	adc	r25, r25
 65a:	0a 94       	dec	r0
 65c:	e2 f7       	brpl	.-8      	; 0x656 <main+0x152>
 65e:	88 bb       	out	0x18, r24	; 24
 660:	2f ef       	ldi	r18, 0xFF	; 255
 662:	85 ea       	ldi	r24, 0xA5	; 165
 664:	9e e0       	ldi	r25, 0x0E	; 14
 666:	21 50       	subi	r18, 0x01	; 1
 668:	80 40       	sbci	r24, 0x00	; 0
 66a:	90 40       	sbci	r25, 0x00	; 0
 66c:	e1 f7       	brne	.-8      	; 0x666 <main+0x162>
 66e:	00 c0       	rjmp	.+0      	; 0x670 <main+0x16c>
 670:	00 00       	nop
 672:	18 ba       	out	0x18, r1	; 24
				_delay_ms(300);
				PORTB = 0x00;
 674:	af ef       	ldi	r26, 0xFF	; 255
 676:	b5 ea       	ldi	r27, 0xA5	; 165
 678:	2e e0       	ldi	r18, 0x0E	; 14
 67a:	a1 50       	subi	r26, 0x01	; 1
 67c:	b0 40       	sbci	r27, 0x00	; 0
 67e:	20 40       	sbci	r18, 0x00	; 0
 680:	e1 f7       	brne	.-8      	; 0x67a <main+0x176>
 682:	00 c0       	rjmp	.+0      	; 0x684 <main+0x180>
 684:	00 00       	nop
 686:	80 91 36 01 	lds	r24, 0x0136	; 0x800136 <cnt>
				_delay_ms(300);
			}
			
			sprintf(buff2,"score: %d\r\n",cnt);
 68a:	90 91 37 01 	lds	r25, 0x0137	; 0x800137 <cnt+0x1>
 68e:	9f 93       	push	r25
 690:	8f 93       	push	r24
 692:	88 e1       	ldi	r24, 0x18	; 24
 694:	91 e0       	ldi	r25, 0x01	; 1
 696:	9f 93       	push	r25
 698:	8f 93       	push	r24
 69a:	8e 01       	movw	r16, r28
 69c:	05 5f       	subi	r16, 0xF5	; 245
 69e:	1f 4f       	sbci	r17, 0xFF	; 255
 6a0:	1f 93       	push	r17
 6a2:	0f 93       	push	r16
 6a4:	7b d0       	rcall	.+246    	; 0x79c <sprintf>
			UART1_print_string(buff2);
 6a6:	c8 01       	movw	r24, r16
 6a8:	24 dd       	rcall	.-1464   	; 0xf2 <UART1_print_string>
 6aa:	80 91 36 01 	lds	r24, 0x0136	; 0x800136 <cnt>
			if(cnt == 5	)	level = 2;
 6ae:	90 91 37 01 	lds	r25, 0x0137	; 0x800137 <cnt+0x1>
 6b2:	0f 90       	pop	r0
 6b4:	0f 90       	pop	r0
 6b6:	0f 90       	pop	r0
 6b8:	0f 90       	pop	r0
 6ba:	0f 90       	pop	r0
 6bc:	0f 90       	pop	r0
 6be:	05 97       	sbiw	r24, 0x05	; 5
 6c0:	09 f0       	breq	.+2      	; 0x6c4 <main+0x1c0>
 6c2:	4e cf       	rjmp	.-356    	; 0x560 <main+0x5c>
 6c4:	82 e0       	ldi	r24, 0x02	; 2
 6c6:	90 e0       	ldi	r25, 0x00	; 0
 6c8:	90 93 05 01 	sts	0x0105, r25	; 0x800105 <level+0x1>
 6cc:	80 93 04 01 	sts	0x0104, r24	; 0x800104 <level>
 6d0:	47 cf       	rjmp	.-370    	; 0x560 <main+0x5c>
		}
	}
	UART1_print_string("----------\r\n");
 6d2:	84 e2       	ldi	r24, 0x24	; 36
 6d4:	91 e0       	ldi	r25, 0x01	; 1
 6d6:	0d dd       	rcall	.-1510   	; 0xf2 <UART1_print_string>
 6d8:	80 e0       	ldi	r24, 0x00	; 0
}
 6da:	90 e0       	ldi	r25, 0x00	; 0
 6dc:	6e 96       	adiw	r28, 0x1e	; 30
 6de:	0f b6       	in	r0, 0x3f	; 63
 6e0:	f8 94       	cli
 6e2:	de bf       	out	0x3e, r29	; 62
 6e4:	0f be       	out	0x3f, r0	; 63
 6e6:	cd bf       	out	0x3d, r28	; 61
 6e8:	df 91       	pop	r29
 6ea:	cf 91       	pop	r28
 6ec:	1f 91       	pop	r17
 6ee:	0f 91       	pop	r16
 6f0:	08 95       	ret

000006f2 <do_rand>:
 6f2:	8f 92       	push	r8
 6f4:	9f 92       	push	r9
 6f6:	af 92       	push	r10
 6f8:	bf 92       	push	r11
 6fa:	cf 92       	push	r12
 6fc:	df 92       	push	r13
 6fe:	ef 92       	push	r14
 700:	ff 92       	push	r15
 702:	cf 93       	push	r28
 704:	df 93       	push	r29
 706:	ec 01       	movw	r28, r24
 708:	68 81       	ld	r22, Y
 70a:	79 81       	ldd	r23, Y+1	; 0x01
 70c:	8a 81       	ldd	r24, Y+2	; 0x02
 70e:	9b 81       	ldd	r25, Y+3	; 0x03
 710:	61 15       	cp	r22, r1
 712:	71 05       	cpc	r23, r1
 714:	81 05       	cpc	r24, r1
 716:	91 05       	cpc	r25, r1
 718:	21 f4       	brne	.+8      	; 0x722 <do_rand+0x30>
 71a:	64 e2       	ldi	r22, 0x24	; 36
 71c:	79 ed       	ldi	r23, 0xD9	; 217
 71e:	8b e5       	ldi	r24, 0x5B	; 91
 720:	97 e0       	ldi	r25, 0x07	; 7
 722:	2d e1       	ldi	r18, 0x1D	; 29
 724:	33 ef       	ldi	r19, 0xF3	; 243
 726:	41 e0       	ldi	r20, 0x01	; 1
 728:	50 e0       	ldi	r21, 0x00	; 0
 72a:	13 d3       	rcall	.+1574   	; 0xd52 <__divmodsi4>
 72c:	49 01       	movw	r8, r18
 72e:	5a 01       	movw	r10, r20
 730:	9b 01       	movw	r18, r22
 732:	ac 01       	movw	r20, r24
 734:	a7 ea       	ldi	r26, 0xA7	; 167
 736:	b1 e4       	ldi	r27, 0x41	; 65
 738:	28 d3       	rcall	.+1616   	; 0xd8a <__muluhisi3>
 73a:	6b 01       	movw	r12, r22
 73c:	7c 01       	movw	r14, r24
 73e:	ac ee       	ldi	r26, 0xEC	; 236
 740:	b4 ef       	ldi	r27, 0xF4	; 244
 742:	a5 01       	movw	r20, r10
 744:	94 01       	movw	r18, r8
 746:	2d d3       	rcall	.+1626   	; 0xda2 <__mulohisi3>
 748:	dc 01       	movw	r26, r24
 74a:	cb 01       	movw	r24, r22
 74c:	8c 0d       	add	r24, r12
 74e:	9d 1d       	adc	r25, r13
 750:	ae 1d       	adc	r26, r14
 752:	bf 1d       	adc	r27, r15
 754:	b7 ff       	sbrs	r27, 7
 756:	03 c0       	rjmp	.+6      	; 0x75e <do_rand+0x6c>
 758:	01 97       	sbiw	r24, 0x01	; 1
 75a:	a1 09       	sbc	r26, r1
 75c:	b0 48       	sbci	r27, 0x80	; 128
 75e:	88 83       	st	Y, r24
 760:	99 83       	std	Y+1, r25	; 0x01
 762:	aa 83       	std	Y+2, r26	; 0x02
 764:	bb 83       	std	Y+3, r27	; 0x03
 766:	9f 77       	andi	r25, 0x7F	; 127
 768:	df 91       	pop	r29
 76a:	cf 91       	pop	r28
 76c:	ff 90       	pop	r15
 76e:	ef 90       	pop	r14
 770:	df 90       	pop	r13
 772:	cf 90       	pop	r12
 774:	bf 90       	pop	r11
 776:	af 90       	pop	r10
 778:	9f 90       	pop	r9
 77a:	8f 90       	pop	r8
 77c:	08 95       	ret

0000077e <rand_r>:
 77e:	b9 cf       	rjmp	.-142    	; 0x6f2 <do_rand>

00000780 <rand>:
 780:	80 e0       	ldi	r24, 0x00	; 0
 782:	91 e0       	ldi	r25, 0x01	; 1
 784:	b6 cf       	rjmp	.-148    	; 0x6f2 <do_rand>

00000786 <srand>:
 786:	a0 e0       	ldi	r26, 0x00	; 0
 788:	b0 e0       	ldi	r27, 0x00	; 0
 78a:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__DATA_REGION_ORIGIN__>
 78e:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 792:	a0 93 02 01 	sts	0x0102, r26	; 0x800102 <__DATA_REGION_ORIGIN__+0x2>
 796:	b0 93 03 01 	sts	0x0103, r27	; 0x800103 <__DATA_REGION_ORIGIN__+0x3>
 79a:	08 95       	ret

0000079c <sprintf>:
 79c:	0f 93       	push	r16
 79e:	1f 93       	push	r17
 7a0:	cf 93       	push	r28
 7a2:	df 93       	push	r29
 7a4:	cd b7       	in	r28, 0x3d	; 61
 7a6:	de b7       	in	r29, 0x3e	; 62
 7a8:	2e 97       	sbiw	r28, 0x0e	; 14
 7aa:	0f b6       	in	r0, 0x3f	; 63
 7ac:	f8 94       	cli
 7ae:	de bf       	out	0x3e, r29	; 62
 7b0:	0f be       	out	0x3f, r0	; 63
 7b2:	cd bf       	out	0x3d, r28	; 61
 7b4:	0d 89       	ldd	r16, Y+21	; 0x15
 7b6:	1e 89       	ldd	r17, Y+22	; 0x16
 7b8:	86 e0       	ldi	r24, 0x06	; 6
 7ba:	8c 83       	std	Y+4, r24	; 0x04
 7bc:	1a 83       	std	Y+2, r17	; 0x02
 7be:	09 83       	std	Y+1, r16	; 0x01
 7c0:	8f ef       	ldi	r24, 0xFF	; 255
 7c2:	9f e7       	ldi	r25, 0x7F	; 127
 7c4:	9e 83       	std	Y+6, r25	; 0x06
 7c6:	8d 83       	std	Y+5, r24	; 0x05
 7c8:	ae 01       	movw	r20, r28
 7ca:	47 5e       	subi	r20, 0xE7	; 231
 7cc:	5f 4f       	sbci	r21, 0xFF	; 255
 7ce:	6f 89       	ldd	r22, Y+23	; 0x17
 7d0:	78 8d       	ldd	r23, Y+24	; 0x18
 7d2:	ce 01       	movw	r24, r28
 7d4:	01 96       	adiw	r24, 0x01	; 1
 7d6:	10 d0       	rcall	.+32     	; 0x7f8 <vfprintf>
 7d8:	ef 81       	ldd	r30, Y+7	; 0x07
 7da:	f8 85       	ldd	r31, Y+8	; 0x08
 7dc:	e0 0f       	add	r30, r16
 7de:	f1 1f       	adc	r31, r17
 7e0:	10 82       	st	Z, r1
 7e2:	2e 96       	adiw	r28, 0x0e	; 14
 7e4:	0f b6       	in	r0, 0x3f	; 63
 7e6:	f8 94       	cli
 7e8:	de bf       	out	0x3e, r29	; 62
 7ea:	0f be       	out	0x3f, r0	; 63
 7ec:	cd bf       	out	0x3d, r28	; 61
 7ee:	df 91       	pop	r29
 7f0:	cf 91       	pop	r28
 7f2:	1f 91       	pop	r17
 7f4:	0f 91       	pop	r16
 7f6:	08 95       	ret

000007f8 <vfprintf>:
 7f8:	2f 92       	push	r2
 7fa:	3f 92       	push	r3
 7fc:	4f 92       	push	r4
 7fe:	5f 92       	push	r5
 800:	6f 92       	push	r6
 802:	7f 92       	push	r7
 804:	8f 92       	push	r8
 806:	9f 92       	push	r9
 808:	af 92       	push	r10
 80a:	bf 92       	push	r11
 80c:	cf 92       	push	r12
 80e:	df 92       	push	r13
 810:	ef 92       	push	r14
 812:	ff 92       	push	r15
 814:	0f 93       	push	r16
 816:	1f 93       	push	r17
 818:	cf 93       	push	r28
 81a:	df 93       	push	r29
 81c:	cd b7       	in	r28, 0x3d	; 61
 81e:	de b7       	in	r29, 0x3e	; 62
 820:	2b 97       	sbiw	r28, 0x0b	; 11
 822:	0f b6       	in	r0, 0x3f	; 63
 824:	f8 94       	cli
 826:	de bf       	out	0x3e, r29	; 62
 828:	0f be       	out	0x3f, r0	; 63
 82a:	cd bf       	out	0x3d, r28	; 61
 82c:	6c 01       	movw	r12, r24
 82e:	7b 01       	movw	r14, r22
 830:	8a 01       	movw	r16, r20
 832:	fc 01       	movw	r30, r24
 834:	17 82       	std	Z+7, r1	; 0x07
 836:	16 82       	std	Z+6, r1	; 0x06
 838:	83 81       	ldd	r24, Z+3	; 0x03
 83a:	81 ff       	sbrs	r24, 1
 83c:	bf c1       	rjmp	.+894    	; 0xbbc <vfprintf+0x3c4>
 83e:	ce 01       	movw	r24, r28
 840:	01 96       	adiw	r24, 0x01	; 1
 842:	3c 01       	movw	r6, r24
 844:	f6 01       	movw	r30, r12
 846:	93 81       	ldd	r25, Z+3	; 0x03
 848:	f7 01       	movw	r30, r14
 84a:	93 fd       	sbrc	r25, 3
 84c:	85 91       	lpm	r24, Z+
 84e:	93 ff       	sbrs	r25, 3
 850:	81 91       	ld	r24, Z+
 852:	7f 01       	movw	r14, r30
 854:	88 23       	and	r24, r24
 856:	09 f4       	brne	.+2      	; 0x85a <vfprintf+0x62>
 858:	ad c1       	rjmp	.+858    	; 0xbb4 <vfprintf+0x3bc>
 85a:	85 32       	cpi	r24, 0x25	; 37
 85c:	39 f4       	brne	.+14     	; 0x86c <vfprintf+0x74>
 85e:	93 fd       	sbrc	r25, 3
 860:	85 91       	lpm	r24, Z+
 862:	93 ff       	sbrs	r25, 3
 864:	81 91       	ld	r24, Z+
 866:	7f 01       	movw	r14, r30
 868:	85 32       	cpi	r24, 0x25	; 37
 86a:	21 f4       	brne	.+8      	; 0x874 <vfprintf+0x7c>
 86c:	b6 01       	movw	r22, r12
 86e:	90 e0       	ldi	r25, 0x00	; 0
 870:	d6 d1       	rcall	.+940    	; 0xc1e <fputc>
 872:	e8 cf       	rjmp	.-48     	; 0x844 <vfprintf+0x4c>
 874:	91 2c       	mov	r9, r1
 876:	21 2c       	mov	r2, r1
 878:	31 2c       	mov	r3, r1
 87a:	ff e1       	ldi	r31, 0x1F	; 31
 87c:	f3 15       	cp	r31, r3
 87e:	d8 f0       	brcs	.+54     	; 0x8b6 <vfprintf+0xbe>
 880:	8b 32       	cpi	r24, 0x2B	; 43
 882:	79 f0       	breq	.+30     	; 0x8a2 <vfprintf+0xaa>
 884:	38 f4       	brcc	.+14     	; 0x894 <vfprintf+0x9c>
 886:	80 32       	cpi	r24, 0x20	; 32
 888:	79 f0       	breq	.+30     	; 0x8a8 <vfprintf+0xb0>
 88a:	83 32       	cpi	r24, 0x23	; 35
 88c:	a1 f4       	brne	.+40     	; 0x8b6 <vfprintf+0xbe>
 88e:	23 2d       	mov	r18, r3
 890:	20 61       	ori	r18, 0x10	; 16
 892:	1d c0       	rjmp	.+58     	; 0x8ce <vfprintf+0xd6>
 894:	8d 32       	cpi	r24, 0x2D	; 45
 896:	61 f0       	breq	.+24     	; 0x8b0 <vfprintf+0xb8>
 898:	80 33       	cpi	r24, 0x30	; 48
 89a:	69 f4       	brne	.+26     	; 0x8b6 <vfprintf+0xbe>
 89c:	23 2d       	mov	r18, r3
 89e:	21 60       	ori	r18, 0x01	; 1
 8a0:	16 c0       	rjmp	.+44     	; 0x8ce <vfprintf+0xd6>
 8a2:	83 2d       	mov	r24, r3
 8a4:	82 60       	ori	r24, 0x02	; 2
 8a6:	38 2e       	mov	r3, r24
 8a8:	e3 2d       	mov	r30, r3
 8aa:	e4 60       	ori	r30, 0x04	; 4
 8ac:	3e 2e       	mov	r3, r30
 8ae:	2a c0       	rjmp	.+84     	; 0x904 <vfprintf+0x10c>
 8b0:	f3 2d       	mov	r31, r3
 8b2:	f8 60       	ori	r31, 0x08	; 8
 8b4:	1d c0       	rjmp	.+58     	; 0x8f0 <vfprintf+0xf8>
 8b6:	37 fc       	sbrc	r3, 7
 8b8:	2d c0       	rjmp	.+90     	; 0x914 <vfprintf+0x11c>
 8ba:	20 ed       	ldi	r18, 0xD0	; 208
 8bc:	28 0f       	add	r18, r24
 8be:	2a 30       	cpi	r18, 0x0A	; 10
 8c0:	40 f0       	brcs	.+16     	; 0x8d2 <vfprintf+0xda>
 8c2:	8e 32       	cpi	r24, 0x2E	; 46
 8c4:	b9 f4       	brne	.+46     	; 0x8f4 <vfprintf+0xfc>
 8c6:	36 fc       	sbrc	r3, 6
 8c8:	75 c1       	rjmp	.+746    	; 0xbb4 <vfprintf+0x3bc>
 8ca:	23 2d       	mov	r18, r3
 8cc:	20 64       	ori	r18, 0x40	; 64
 8ce:	32 2e       	mov	r3, r18
 8d0:	19 c0       	rjmp	.+50     	; 0x904 <vfprintf+0x10c>
 8d2:	36 fe       	sbrs	r3, 6
 8d4:	06 c0       	rjmp	.+12     	; 0x8e2 <vfprintf+0xea>
 8d6:	8a e0       	ldi	r24, 0x0A	; 10
 8d8:	98 9e       	mul	r9, r24
 8da:	20 0d       	add	r18, r0
 8dc:	11 24       	eor	r1, r1
 8de:	92 2e       	mov	r9, r18
 8e0:	11 c0       	rjmp	.+34     	; 0x904 <vfprintf+0x10c>
 8e2:	ea e0       	ldi	r30, 0x0A	; 10
 8e4:	2e 9e       	mul	r2, r30
 8e6:	20 0d       	add	r18, r0
 8e8:	11 24       	eor	r1, r1
 8ea:	22 2e       	mov	r2, r18
 8ec:	f3 2d       	mov	r31, r3
 8ee:	f0 62       	ori	r31, 0x20	; 32
 8f0:	3f 2e       	mov	r3, r31
 8f2:	08 c0       	rjmp	.+16     	; 0x904 <vfprintf+0x10c>
 8f4:	8c 36       	cpi	r24, 0x6C	; 108
 8f6:	21 f4       	brne	.+8      	; 0x900 <vfprintf+0x108>
 8f8:	83 2d       	mov	r24, r3
 8fa:	80 68       	ori	r24, 0x80	; 128
 8fc:	38 2e       	mov	r3, r24
 8fe:	02 c0       	rjmp	.+4      	; 0x904 <vfprintf+0x10c>
 900:	88 36       	cpi	r24, 0x68	; 104
 902:	41 f4       	brne	.+16     	; 0x914 <vfprintf+0x11c>
 904:	f7 01       	movw	r30, r14
 906:	93 fd       	sbrc	r25, 3
 908:	85 91       	lpm	r24, Z+
 90a:	93 ff       	sbrs	r25, 3
 90c:	81 91       	ld	r24, Z+
 90e:	7f 01       	movw	r14, r30
 910:	81 11       	cpse	r24, r1
 912:	b3 cf       	rjmp	.-154    	; 0x87a <vfprintf+0x82>
 914:	98 2f       	mov	r25, r24
 916:	9f 7d       	andi	r25, 0xDF	; 223
 918:	95 54       	subi	r25, 0x45	; 69
 91a:	93 30       	cpi	r25, 0x03	; 3
 91c:	28 f4       	brcc	.+10     	; 0x928 <vfprintf+0x130>
 91e:	0c 5f       	subi	r16, 0xFC	; 252
 920:	1f 4f       	sbci	r17, 0xFF	; 255
 922:	9f e3       	ldi	r25, 0x3F	; 63
 924:	99 83       	std	Y+1, r25	; 0x01
 926:	0d c0       	rjmp	.+26     	; 0x942 <vfprintf+0x14a>
 928:	83 36       	cpi	r24, 0x63	; 99
 92a:	31 f0       	breq	.+12     	; 0x938 <vfprintf+0x140>
 92c:	83 37       	cpi	r24, 0x73	; 115
 92e:	71 f0       	breq	.+28     	; 0x94c <vfprintf+0x154>
 930:	83 35       	cpi	r24, 0x53	; 83
 932:	09 f0       	breq	.+2      	; 0x936 <vfprintf+0x13e>
 934:	55 c0       	rjmp	.+170    	; 0x9e0 <vfprintf+0x1e8>
 936:	20 c0       	rjmp	.+64     	; 0x978 <vfprintf+0x180>
 938:	f8 01       	movw	r30, r16
 93a:	80 81       	ld	r24, Z
 93c:	89 83       	std	Y+1, r24	; 0x01
 93e:	0e 5f       	subi	r16, 0xFE	; 254
 940:	1f 4f       	sbci	r17, 0xFF	; 255
 942:	88 24       	eor	r8, r8
 944:	83 94       	inc	r8
 946:	91 2c       	mov	r9, r1
 948:	53 01       	movw	r10, r6
 94a:	12 c0       	rjmp	.+36     	; 0x970 <vfprintf+0x178>
 94c:	28 01       	movw	r4, r16
 94e:	f2 e0       	ldi	r31, 0x02	; 2
 950:	4f 0e       	add	r4, r31
 952:	51 1c       	adc	r5, r1
 954:	f8 01       	movw	r30, r16
 956:	a0 80       	ld	r10, Z
 958:	b1 80       	ldd	r11, Z+1	; 0x01
 95a:	36 fe       	sbrs	r3, 6
 95c:	03 c0       	rjmp	.+6      	; 0x964 <vfprintf+0x16c>
 95e:	69 2d       	mov	r22, r9
 960:	70 e0       	ldi	r23, 0x00	; 0
 962:	02 c0       	rjmp	.+4      	; 0x968 <vfprintf+0x170>
 964:	6f ef       	ldi	r22, 0xFF	; 255
 966:	7f ef       	ldi	r23, 0xFF	; 255
 968:	c5 01       	movw	r24, r10
 96a:	4e d1       	rcall	.+668    	; 0xc08 <strnlen>
 96c:	4c 01       	movw	r8, r24
 96e:	82 01       	movw	r16, r4
 970:	f3 2d       	mov	r31, r3
 972:	ff 77       	andi	r31, 0x7F	; 127
 974:	3f 2e       	mov	r3, r31
 976:	15 c0       	rjmp	.+42     	; 0x9a2 <vfprintf+0x1aa>
 978:	28 01       	movw	r4, r16
 97a:	22 e0       	ldi	r18, 0x02	; 2
 97c:	42 0e       	add	r4, r18
 97e:	51 1c       	adc	r5, r1
 980:	f8 01       	movw	r30, r16
 982:	a0 80       	ld	r10, Z
 984:	b1 80       	ldd	r11, Z+1	; 0x01
 986:	36 fe       	sbrs	r3, 6
 988:	03 c0       	rjmp	.+6      	; 0x990 <vfprintf+0x198>
 98a:	69 2d       	mov	r22, r9
 98c:	70 e0       	ldi	r23, 0x00	; 0
 98e:	02 c0       	rjmp	.+4      	; 0x994 <vfprintf+0x19c>
 990:	6f ef       	ldi	r22, 0xFF	; 255
 992:	7f ef       	ldi	r23, 0xFF	; 255
 994:	c5 01       	movw	r24, r10
 996:	2d d1       	rcall	.+602    	; 0xbf2 <strnlen_P>
 998:	4c 01       	movw	r8, r24
 99a:	f3 2d       	mov	r31, r3
 99c:	f0 68       	ori	r31, 0x80	; 128
 99e:	3f 2e       	mov	r3, r31
 9a0:	82 01       	movw	r16, r4
 9a2:	33 fc       	sbrc	r3, 3
 9a4:	19 c0       	rjmp	.+50     	; 0x9d8 <vfprintf+0x1e0>
 9a6:	82 2d       	mov	r24, r2
 9a8:	90 e0       	ldi	r25, 0x00	; 0
 9aa:	88 16       	cp	r8, r24
 9ac:	99 06       	cpc	r9, r25
 9ae:	a0 f4       	brcc	.+40     	; 0x9d8 <vfprintf+0x1e0>
 9b0:	b6 01       	movw	r22, r12
 9b2:	80 e2       	ldi	r24, 0x20	; 32
 9b4:	90 e0       	ldi	r25, 0x00	; 0
 9b6:	33 d1       	rcall	.+614    	; 0xc1e <fputc>
 9b8:	2a 94       	dec	r2
 9ba:	f5 cf       	rjmp	.-22     	; 0x9a6 <vfprintf+0x1ae>
 9bc:	f5 01       	movw	r30, r10
 9be:	37 fc       	sbrc	r3, 7
 9c0:	85 91       	lpm	r24, Z+
 9c2:	37 fe       	sbrs	r3, 7
 9c4:	81 91       	ld	r24, Z+
 9c6:	5f 01       	movw	r10, r30
 9c8:	b6 01       	movw	r22, r12
 9ca:	90 e0       	ldi	r25, 0x00	; 0
 9cc:	28 d1       	rcall	.+592    	; 0xc1e <fputc>
 9ce:	21 10       	cpse	r2, r1
 9d0:	2a 94       	dec	r2
 9d2:	21 e0       	ldi	r18, 0x01	; 1
 9d4:	82 1a       	sub	r8, r18
 9d6:	91 08       	sbc	r9, r1
 9d8:	81 14       	cp	r8, r1
 9da:	91 04       	cpc	r9, r1
 9dc:	79 f7       	brne	.-34     	; 0x9bc <vfprintf+0x1c4>
 9de:	e1 c0       	rjmp	.+450    	; 0xba2 <vfprintf+0x3aa>
 9e0:	84 36       	cpi	r24, 0x64	; 100
 9e2:	11 f0       	breq	.+4      	; 0x9e8 <vfprintf+0x1f0>
 9e4:	89 36       	cpi	r24, 0x69	; 105
 9e6:	39 f5       	brne	.+78     	; 0xa36 <vfprintf+0x23e>
 9e8:	f8 01       	movw	r30, r16
 9ea:	37 fe       	sbrs	r3, 7
 9ec:	07 c0       	rjmp	.+14     	; 0x9fc <vfprintf+0x204>
 9ee:	60 81       	ld	r22, Z
 9f0:	71 81       	ldd	r23, Z+1	; 0x01
 9f2:	82 81       	ldd	r24, Z+2	; 0x02
 9f4:	93 81       	ldd	r25, Z+3	; 0x03
 9f6:	0c 5f       	subi	r16, 0xFC	; 252
 9f8:	1f 4f       	sbci	r17, 0xFF	; 255
 9fa:	08 c0       	rjmp	.+16     	; 0xa0c <vfprintf+0x214>
 9fc:	60 81       	ld	r22, Z
 9fe:	71 81       	ldd	r23, Z+1	; 0x01
 a00:	07 2e       	mov	r0, r23
 a02:	00 0c       	add	r0, r0
 a04:	88 0b       	sbc	r24, r24
 a06:	99 0b       	sbc	r25, r25
 a08:	0e 5f       	subi	r16, 0xFE	; 254
 a0a:	1f 4f       	sbci	r17, 0xFF	; 255
 a0c:	f3 2d       	mov	r31, r3
 a0e:	ff 76       	andi	r31, 0x6F	; 111
 a10:	3f 2e       	mov	r3, r31
 a12:	97 ff       	sbrs	r25, 7
 a14:	09 c0       	rjmp	.+18     	; 0xa28 <vfprintf+0x230>
 a16:	90 95       	com	r25
 a18:	80 95       	com	r24
 a1a:	70 95       	com	r23
 a1c:	61 95       	neg	r22
 a1e:	7f 4f       	sbci	r23, 0xFF	; 255
 a20:	8f 4f       	sbci	r24, 0xFF	; 255
 a22:	9f 4f       	sbci	r25, 0xFF	; 255
 a24:	f0 68       	ori	r31, 0x80	; 128
 a26:	3f 2e       	mov	r3, r31
 a28:	2a e0       	ldi	r18, 0x0A	; 10
 a2a:	30 e0       	ldi	r19, 0x00	; 0
 a2c:	a3 01       	movw	r20, r6
 a2e:	33 d1       	rcall	.+614    	; 0xc96 <__ultoa_invert>
 a30:	88 2e       	mov	r8, r24
 a32:	86 18       	sub	r8, r6
 a34:	44 c0       	rjmp	.+136    	; 0xabe <vfprintf+0x2c6>
 a36:	85 37       	cpi	r24, 0x75	; 117
 a38:	31 f4       	brne	.+12     	; 0xa46 <vfprintf+0x24e>
 a3a:	23 2d       	mov	r18, r3
 a3c:	2f 7e       	andi	r18, 0xEF	; 239
 a3e:	b2 2e       	mov	r11, r18
 a40:	2a e0       	ldi	r18, 0x0A	; 10
 a42:	30 e0       	ldi	r19, 0x00	; 0
 a44:	25 c0       	rjmp	.+74     	; 0xa90 <vfprintf+0x298>
 a46:	93 2d       	mov	r25, r3
 a48:	99 7f       	andi	r25, 0xF9	; 249
 a4a:	b9 2e       	mov	r11, r25
 a4c:	8f 36       	cpi	r24, 0x6F	; 111
 a4e:	c1 f0       	breq	.+48     	; 0xa80 <vfprintf+0x288>
 a50:	18 f4       	brcc	.+6      	; 0xa58 <vfprintf+0x260>
 a52:	88 35       	cpi	r24, 0x58	; 88
 a54:	79 f0       	breq	.+30     	; 0xa74 <vfprintf+0x27c>
 a56:	ae c0       	rjmp	.+348    	; 0xbb4 <vfprintf+0x3bc>
 a58:	80 37       	cpi	r24, 0x70	; 112
 a5a:	19 f0       	breq	.+6      	; 0xa62 <vfprintf+0x26a>
 a5c:	88 37       	cpi	r24, 0x78	; 120
 a5e:	21 f0       	breq	.+8      	; 0xa68 <vfprintf+0x270>
 a60:	a9 c0       	rjmp	.+338    	; 0xbb4 <vfprintf+0x3bc>
 a62:	e9 2f       	mov	r30, r25
 a64:	e0 61       	ori	r30, 0x10	; 16
 a66:	be 2e       	mov	r11, r30
 a68:	b4 fe       	sbrs	r11, 4
 a6a:	0d c0       	rjmp	.+26     	; 0xa86 <vfprintf+0x28e>
 a6c:	fb 2d       	mov	r31, r11
 a6e:	f4 60       	ori	r31, 0x04	; 4
 a70:	bf 2e       	mov	r11, r31
 a72:	09 c0       	rjmp	.+18     	; 0xa86 <vfprintf+0x28e>
 a74:	34 fe       	sbrs	r3, 4
 a76:	0a c0       	rjmp	.+20     	; 0xa8c <vfprintf+0x294>
 a78:	29 2f       	mov	r18, r25
 a7a:	26 60       	ori	r18, 0x06	; 6
 a7c:	b2 2e       	mov	r11, r18
 a7e:	06 c0       	rjmp	.+12     	; 0xa8c <vfprintf+0x294>
 a80:	28 e0       	ldi	r18, 0x08	; 8
 a82:	30 e0       	ldi	r19, 0x00	; 0
 a84:	05 c0       	rjmp	.+10     	; 0xa90 <vfprintf+0x298>
 a86:	20 e1       	ldi	r18, 0x10	; 16
 a88:	30 e0       	ldi	r19, 0x00	; 0
 a8a:	02 c0       	rjmp	.+4      	; 0xa90 <vfprintf+0x298>
 a8c:	20 e1       	ldi	r18, 0x10	; 16
 a8e:	32 e0       	ldi	r19, 0x02	; 2
 a90:	f8 01       	movw	r30, r16
 a92:	b7 fe       	sbrs	r11, 7
 a94:	07 c0       	rjmp	.+14     	; 0xaa4 <vfprintf+0x2ac>
 a96:	60 81       	ld	r22, Z
 a98:	71 81       	ldd	r23, Z+1	; 0x01
 a9a:	82 81       	ldd	r24, Z+2	; 0x02
 a9c:	93 81       	ldd	r25, Z+3	; 0x03
 a9e:	0c 5f       	subi	r16, 0xFC	; 252
 aa0:	1f 4f       	sbci	r17, 0xFF	; 255
 aa2:	06 c0       	rjmp	.+12     	; 0xab0 <vfprintf+0x2b8>
 aa4:	60 81       	ld	r22, Z
 aa6:	71 81       	ldd	r23, Z+1	; 0x01
 aa8:	80 e0       	ldi	r24, 0x00	; 0
 aaa:	90 e0       	ldi	r25, 0x00	; 0
 aac:	0e 5f       	subi	r16, 0xFE	; 254
 aae:	1f 4f       	sbci	r17, 0xFF	; 255
 ab0:	a3 01       	movw	r20, r6
 ab2:	f1 d0       	rcall	.+482    	; 0xc96 <__ultoa_invert>
 ab4:	88 2e       	mov	r8, r24
 ab6:	86 18       	sub	r8, r6
 ab8:	fb 2d       	mov	r31, r11
 aba:	ff 77       	andi	r31, 0x7F	; 127
 abc:	3f 2e       	mov	r3, r31
 abe:	36 fe       	sbrs	r3, 6
 ac0:	0d c0       	rjmp	.+26     	; 0xadc <vfprintf+0x2e4>
 ac2:	23 2d       	mov	r18, r3
 ac4:	2e 7f       	andi	r18, 0xFE	; 254
 ac6:	a2 2e       	mov	r10, r18
 ac8:	89 14       	cp	r8, r9
 aca:	58 f4       	brcc	.+22     	; 0xae2 <vfprintf+0x2ea>
 acc:	34 fe       	sbrs	r3, 4
 ace:	0b c0       	rjmp	.+22     	; 0xae6 <vfprintf+0x2ee>
 ad0:	32 fc       	sbrc	r3, 2
 ad2:	09 c0       	rjmp	.+18     	; 0xae6 <vfprintf+0x2ee>
 ad4:	83 2d       	mov	r24, r3
 ad6:	8e 7e       	andi	r24, 0xEE	; 238
 ad8:	a8 2e       	mov	r10, r24
 ada:	05 c0       	rjmp	.+10     	; 0xae6 <vfprintf+0x2ee>
 adc:	b8 2c       	mov	r11, r8
 ade:	a3 2c       	mov	r10, r3
 ae0:	03 c0       	rjmp	.+6      	; 0xae8 <vfprintf+0x2f0>
 ae2:	b8 2c       	mov	r11, r8
 ae4:	01 c0       	rjmp	.+2      	; 0xae8 <vfprintf+0x2f0>
 ae6:	b9 2c       	mov	r11, r9
 ae8:	a4 fe       	sbrs	r10, 4
 aea:	0f c0       	rjmp	.+30     	; 0xb0a <vfprintf+0x312>
 aec:	fe 01       	movw	r30, r28
 aee:	e8 0d       	add	r30, r8
 af0:	f1 1d       	adc	r31, r1
 af2:	80 81       	ld	r24, Z
 af4:	80 33       	cpi	r24, 0x30	; 48
 af6:	21 f4       	brne	.+8      	; 0xb00 <vfprintf+0x308>
 af8:	9a 2d       	mov	r25, r10
 afa:	99 7e       	andi	r25, 0xE9	; 233
 afc:	a9 2e       	mov	r10, r25
 afe:	09 c0       	rjmp	.+18     	; 0xb12 <vfprintf+0x31a>
 b00:	a2 fe       	sbrs	r10, 2
 b02:	06 c0       	rjmp	.+12     	; 0xb10 <vfprintf+0x318>
 b04:	b3 94       	inc	r11
 b06:	b3 94       	inc	r11
 b08:	04 c0       	rjmp	.+8      	; 0xb12 <vfprintf+0x31a>
 b0a:	8a 2d       	mov	r24, r10
 b0c:	86 78       	andi	r24, 0x86	; 134
 b0e:	09 f0       	breq	.+2      	; 0xb12 <vfprintf+0x31a>
 b10:	b3 94       	inc	r11
 b12:	a3 fc       	sbrc	r10, 3
 b14:	10 c0       	rjmp	.+32     	; 0xb36 <vfprintf+0x33e>
 b16:	a0 fe       	sbrs	r10, 0
 b18:	06 c0       	rjmp	.+12     	; 0xb26 <vfprintf+0x32e>
 b1a:	b2 14       	cp	r11, r2
 b1c:	80 f4       	brcc	.+32     	; 0xb3e <vfprintf+0x346>
 b1e:	28 0c       	add	r2, r8
 b20:	92 2c       	mov	r9, r2
 b22:	9b 18       	sub	r9, r11
 b24:	0d c0       	rjmp	.+26     	; 0xb40 <vfprintf+0x348>
 b26:	b2 14       	cp	r11, r2
 b28:	58 f4       	brcc	.+22     	; 0xb40 <vfprintf+0x348>
 b2a:	b6 01       	movw	r22, r12
 b2c:	80 e2       	ldi	r24, 0x20	; 32
 b2e:	90 e0       	ldi	r25, 0x00	; 0
 b30:	76 d0       	rcall	.+236    	; 0xc1e <fputc>
 b32:	b3 94       	inc	r11
 b34:	f8 cf       	rjmp	.-16     	; 0xb26 <vfprintf+0x32e>
 b36:	b2 14       	cp	r11, r2
 b38:	18 f4       	brcc	.+6      	; 0xb40 <vfprintf+0x348>
 b3a:	2b 18       	sub	r2, r11
 b3c:	02 c0       	rjmp	.+4      	; 0xb42 <vfprintf+0x34a>
 b3e:	98 2c       	mov	r9, r8
 b40:	21 2c       	mov	r2, r1
 b42:	a4 fe       	sbrs	r10, 4
 b44:	0f c0       	rjmp	.+30     	; 0xb64 <vfprintf+0x36c>
 b46:	b6 01       	movw	r22, r12
 b48:	80 e3       	ldi	r24, 0x30	; 48
 b4a:	90 e0       	ldi	r25, 0x00	; 0
 b4c:	68 d0       	rcall	.+208    	; 0xc1e <fputc>
 b4e:	a2 fe       	sbrs	r10, 2
 b50:	16 c0       	rjmp	.+44     	; 0xb7e <vfprintf+0x386>
 b52:	a1 fc       	sbrc	r10, 1
 b54:	03 c0       	rjmp	.+6      	; 0xb5c <vfprintf+0x364>
 b56:	88 e7       	ldi	r24, 0x78	; 120
 b58:	90 e0       	ldi	r25, 0x00	; 0
 b5a:	02 c0       	rjmp	.+4      	; 0xb60 <vfprintf+0x368>
 b5c:	88 e5       	ldi	r24, 0x58	; 88
 b5e:	90 e0       	ldi	r25, 0x00	; 0
 b60:	b6 01       	movw	r22, r12
 b62:	0c c0       	rjmp	.+24     	; 0xb7c <vfprintf+0x384>
 b64:	8a 2d       	mov	r24, r10
 b66:	86 78       	andi	r24, 0x86	; 134
 b68:	51 f0       	breq	.+20     	; 0xb7e <vfprintf+0x386>
 b6a:	a1 fe       	sbrs	r10, 1
 b6c:	02 c0       	rjmp	.+4      	; 0xb72 <vfprintf+0x37a>
 b6e:	8b e2       	ldi	r24, 0x2B	; 43
 b70:	01 c0       	rjmp	.+2      	; 0xb74 <vfprintf+0x37c>
 b72:	80 e2       	ldi	r24, 0x20	; 32
 b74:	a7 fc       	sbrc	r10, 7
 b76:	8d e2       	ldi	r24, 0x2D	; 45
 b78:	b6 01       	movw	r22, r12
 b7a:	90 e0       	ldi	r25, 0x00	; 0
 b7c:	50 d0       	rcall	.+160    	; 0xc1e <fputc>
 b7e:	89 14       	cp	r8, r9
 b80:	30 f4       	brcc	.+12     	; 0xb8e <vfprintf+0x396>
 b82:	b6 01       	movw	r22, r12
 b84:	80 e3       	ldi	r24, 0x30	; 48
 b86:	90 e0       	ldi	r25, 0x00	; 0
 b88:	4a d0       	rcall	.+148    	; 0xc1e <fputc>
 b8a:	9a 94       	dec	r9
 b8c:	f8 cf       	rjmp	.-16     	; 0xb7e <vfprintf+0x386>
 b8e:	8a 94       	dec	r8
 b90:	f3 01       	movw	r30, r6
 b92:	e8 0d       	add	r30, r8
 b94:	f1 1d       	adc	r31, r1
 b96:	80 81       	ld	r24, Z
 b98:	b6 01       	movw	r22, r12
 b9a:	90 e0       	ldi	r25, 0x00	; 0
 b9c:	40 d0       	rcall	.+128    	; 0xc1e <fputc>
 b9e:	81 10       	cpse	r8, r1
 ba0:	f6 cf       	rjmp	.-20     	; 0xb8e <vfprintf+0x396>
 ba2:	22 20       	and	r2, r2
 ba4:	09 f4       	brne	.+2      	; 0xba8 <vfprintf+0x3b0>
 ba6:	4e ce       	rjmp	.-868    	; 0x844 <vfprintf+0x4c>
 ba8:	b6 01       	movw	r22, r12
 baa:	80 e2       	ldi	r24, 0x20	; 32
 bac:	90 e0       	ldi	r25, 0x00	; 0
 bae:	37 d0       	rcall	.+110    	; 0xc1e <fputc>
 bb0:	2a 94       	dec	r2
 bb2:	f7 cf       	rjmp	.-18     	; 0xba2 <vfprintf+0x3aa>
 bb4:	f6 01       	movw	r30, r12
 bb6:	86 81       	ldd	r24, Z+6	; 0x06
 bb8:	97 81       	ldd	r25, Z+7	; 0x07
 bba:	02 c0       	rjmp	.+4      	; 0xbc0 <vfprintf+0x3c8>
 bbc:	8f ef       	ldi	r24, 0xFF	; 255
 bbe:	9f ef       	ldi	r25, 0xFF	; 255
 bc0:	2b 96       	adiw	r28, 0x0b	; 11
 bc2:	0f b6       	in	r0, 0x3f	; 63
 bc4:	f8 94       	cli
 bc6:	de bf       	out	0x3e, r29	; 62
 bc8:	0f be       	out	0x3f, r0	; 63
 bca:	cd bf       	out	0x3d, r28	; 61
 bcc:	df 91       	pop	r29
 bce:	cf 91       	pop	r28
 bd0:	1f 91       	pop	r17
 bd2:	0f 91       	pop	r16
 bd4:	ff 90       	pop	r15
 bd6:	ef 90       	pop	r14
 bd8:	df 90       	pop	r13
 bda:	cf 90       	pop	r12
 bdc:	bf 90       	pop	r11
 bde:	af 90       	pop	r10
 be0:	9f 90       	pop	r9
 be2:	8f 90       	pop	r8
 be4:	7f 90       	pop	r7
 be6:	6f 90       	pop	r6
 be8:	5f 90       	pop	r5
 bea:	4f 90       	pop	r4
 bec:	3f 90       	pop	r3
 bee:	2f 90       	pop	r2
 bf0:	08 95       	ret

00000bf2 <strnlen_P>:
 bf2:	fc 01       	movw	r30, r24
 bf4:	05 90       	lpm	r0, Z+
 bf6:	61 50       	subi	r22, 0x01	; 1
 bf8:	70 40       	sbci	r23, 0x00	; 0
 bfa:	01 10       	cpse	r0, r1
 bfc:	d8 f7       	brcc	.-10     	; 0xbf4 <strnlen_P+0x2>
 bfe:	80 95       	com	r24
 c00:	90 95       	com	r25
 c02:	8e 0f       	add	r24, r30
 c04:	9f 1f       	adc	r25, r31
 c06:	08 95       	ret

00000c08 <strnlen>:
 c08:	fc 01       	movw	r30, r24
 c0a:	61 50       	subi	r22, 0x01	; 1
 c0c:	70 40       	sbci	r23, 0x00	; 0
 c0e:	01 90       	ld	r0, Z+
 c10:	01 10       	cpse	r0, r1
 c12:	d8 f7       	brcc	.-10     	; 0xc0a <strnlen+0x2>
 c14:	80 95       	com	r24
 c16:	90 95       	com	r25
 c18:	8e 0f       	add	r24, r30
 c1a:	9f 1f       	adc	r25, r31
 c1c:	08 95       	ret

00000c1e <fputc>:
 c1e:	0f 93       	push	r16
 c20:	1f 93       	push	r17
 c22:	cf 93       	push	r28
 c24:	df 93       	push	r29
 c26:	fb 01       	movw	r30, r22
 c28:	23 81       	ldd	r18, Z+3	; 0x03
 c2a:	21 fd       	sbrc	r18, 1
 c2c:	03 c0       	rjmp	.+6      	; 0xc34 <fputc+0x16>
 c2e:	8f ef       	ldi	r24, 0xFF	; 255
 c30:	9f ef       	ldi	r25, 0xFF	; 255
 c32:	2c c0       	rjmp	.+88     	; 0xc8c <fputc+0x6e>
 c34:	22 ff       	sbrs	r18, 2
 c36:	16 c0       	rjmp	.+44     	; 0xc64 <fputc+0x46>
 c38:	46 81       	ldd	r20, Z+6	; 0x06
 c3a:	57 81       	ldd	r21, Z+7	; 0x07
 c3c:	24 81       	ldd	r18, Z+4	; 0x04
 c3e:	35 81       	ldd	r19, Z+5	; 0x05
 c40:	42 17       	cp	r20, r18
 c42:	53 07       	cpc	r21, r19
 c44:	44 f4       	brge	.+16     	; 0xc56 <fputc+0x38>
 c46:	a0 81       	ld	r26, Z
 c48:	b1 81       	ldd	r27, Z+1	; 0x01
 c4a:	9d 01       	movw	r18, r26
 c4c:	2f 5f       	subi	r18, 0xFF	; 255
 c4e:	3f 4f       	sbci	r19, 0xFF	; 255
 c50:	31 83       	std	Z+1, r19	; 0x01
 c52:	20 83       	st	Z, r18
 c54:	8c 93       	st	X, r24
 c56:	26 81       	ldd	r18, Z+6	; 0x06
 c58:	37 81       	ldd	r19, Z+7	; 0x07
 c5a:	2f 5f       	subi	r18, 0xFF	; 255
 c5c:	3f 4f       	sbci	r19, 0xFF	; 255
 c5e:	37 83       	std	Z+7, r19	; 0x07
 c60:	26 83       	std	Z+6, r18	; 0x06
 c62:	14 c0       	rjmp	.+40     	; 0xc8c <fputc+0x6e>
 c64:	8b 01       	movw	r16, r22
 c66:	ec 01       	movw	r28, r24
 c68:	fb 01       	movw	r30, r22
 c6a:	00 84       	ldd	r0, Z+8	; 0x08
 c6c:	f1 85       	ldd	r31, Z+9	; 0x09
 c6e:	e0 2d       	mov	r30, r0
 c70:	09 95       	icall
 c72:	89 2b       	or	r24, r25
 c74:	e1 f6       	brne	.-72     	; 0xc2e <fputc+0x10>
 c76:	d8 01       	movw	r26, r16
 c78:	16 96       	adiw	r26, 0x06	; 6
 c7a:	8d 91       	ld	r24, X+
 c7c:	9c 91       	ld	r25, X
 c7e:	17 97       	sbiw	r26, 0x07	; 7
 c80:	01 96       	adiw	r24, 0x01	; 1
 c82:	17 96       	adiw	r26, 0x07	; 7
 c84:	9c 93       	st	X, r25
 c86:	8e 93       	st	-X, r24
 c88:	16 97       	sbiw	r26, 0x06	; 6
 c8a:	ce 01       	movw	r24, r28
 c8c:	df 91       	pop	r29
 c8e:	cf 91       	pop	r28
 c90:	1f 91       	pop	r17
 c92:	0f 91       	pop	r16
 c94:	08 95       	ret

00000c96 <__ultoa_invert>:
 c96:	fa 01       	movw	r30, r20
 c98:	aa 27       	eor	r26, r26
 c9a:	28 30       	cpi	r18, 0x08	; 8
 c9c:	51 f1       	breq	.+84     	; 0xcf2 <__ultoa_invert+0x5c>
 c9e:	20 31       	cpi	r18, 0x10	; 16
 ca0:	81 f1       	breq	.+96     	; 0xd02 <__ultoa_invert+0x6c>
 ca2:	e8 94       	clt
 ca4:	6f 93       	push	r22
 ca6:	6e 7f       	andi	r22, 0xFE	; 254
 ca8:	6e 5f       	subi	r22, 0xFE	; 254
 caa:	7f 4f       	sbci	r23, 0xFF	; 255
 cac:	8f 4f       	sbci	r24, 0xFF	; 255
 cae:	9f 4f       	sbci	r25, 0xFF	; 255
 cb0:	af 4f       	sbci	r26, 0xFF	; 255
 cb2:	b1 e0       	ldi	r27, 0x01	; 1
 cb4:	3e d0       	rcall	.+124    	; 0xd32 <__ultoa_invert+0x9c>
 cb6:	b4 e0       	ldi	r27, 0x04	; 4
 cb8:	3c d0       	rcall	.+120    	; 0xd32 <__ultoa_invert+0x9c>
 cba:	67 0f       	add	r22, r23
 cbc:	78 1f       	adc	r23, r24
 cbe:	89 1f       	adc	r24, r25
 cc0:	9a 1f       	adc	r25, r26
 cc2:	a1 1d       	adc	r26, r1
 cc4:	68 0f       	add	r22, r24
 cc6:	79 1f       	adc	r23, r25
 cc8:	8a 1f       	adc	r24, r26
 cca:	91 1d       	adc	r25, r1
 ccc:	a1 1d       	adc	r26, r1
 cce:	6a 0f       	add	r22, r26
 cd0:	71 1d       	adc	r23, r1
 cd2:	81 1d       	adc	r24, r1
 cd4:	91 1d       	adc	r25, r1
 cd6:	a1 1d       	adc	r26, r1
 cd8:	20 d0       	rcall	.+64     	; 0xd1a <__ultoa_invert+0x84>
 cda:	09 f4       	brne	.+2      	; 0xcde <__ultoa_invert+0x48>
 cdc:	68 94       	set
 cde:	3f 91       	pop	r19
 ce0:	2a e0       	ldi	r18, 0x0A	; 10
 ce2:	26 9f       	mul	r18, r22
 ce4:	11 24       	eor	r1, r1
 ce6:	30 19       	sub	r19, r0
 ce8:	30 5d       	subi	r19, 0xD0	; 208
 cea:	31 93       	st	Z+, r19
 cec:	de f6       	brtc	.-74     	; 0xca4 <__ultoa_invert+0xe>
 cee:	cf 01       	movw	r24, r30
 cf0:	08 95       	ret
 cf2:	46 2f       	mov	r20, r22
 cf4:	47 70       	andi	r20, 0x07	; 7
 cf6:	40 5d       	subi	r20, 0xD0	; 208
 cf8:	41 93       	st	Z+, r20
 cfa:	b3 e0       	ldi	r27, 0x03	; 3
 cfc:	0f d0       	rcall	.+30     	; 0xd1c <__ultoa_invert+0x86>
 cfe:	c9 f7       	brne	.-14     	; 0xcf2 <__ultoa_invert+0x5c>
 d00:	f6 cf       	rjmp	.-20     	; 0xcee <__ultoa_invert+0x58>
 d02:	46 2f       	mov	r20, r22
 d04:	4f 70       	andi	r20, 0x0F	; 15
 d06:	40 5d       	subi	r20, 0xD0	; 208
 d08:	4a 33       	cpi	r20, 0x3A	; 58
 d0a:	18 f0       	brcs	.+6      	; 0xd12 <__ultoa_invert+0x7c>
 d0c:	49 5d       	subi	r20, 0xD9	; 217
 d0e:	31 fd       	sbrc	r19, 1
 d10:	40 52       	subi	r20, 0x20	; 32
 d12:	41 93       	st	Z+, r20
 d14:	02 d0       	rcall	.+4      	; 0xd1a <__ultoa_invert+0x84>
 d16:	a9 f7       	brne	.-22     	; 0xd02 <__ultoa_invert+0x6c>
 d18:	ea cf       	rjmp	.-44     	; 0xcee <__ultoa_invert+0x58>
 d1a:	b4 e0       	ldi	r27, 0x04	; 4
 d1c:	a6 95       	lsr	r26
 d1e:	97 95       	ror	r25
 d20:	87 95       	ror	r24
 d22:	77 95       	ror	r23
 d24:	67 95       	ror	r22
 d26:	ba 95       	dec	r27
 d28:	c9 f7       	brne	.-14     	; 0xd1c <__ultoa_invert+0x86>
 d2a:	00 97       	sbiw	r24, 0x00	; 0
 d2c:	61 05       	cpc	r22, r1
 d2e:	71 05       	cpc	r23, r1
 d30:	08 95       	ret
 d32:	9b 01       	movw	r18, r22
 d34:	ac 01       	movw	r20, r24
 d36:	0a 2e       	mov	r0, r26
 d38:	06 94       	lsr	r0
 d3a:	57 95       	ror	r21
 d3c:	47 95       	ror	r20
 d3e:	37 95       	ror	r19
 d40:	27 95       	ror	r18
 d42:	ba 95       	dec	r27
 d44:	c9 f7       	brne	.-14     	; 0xd38 <__ultoa_invert+0xa2>
 d46:	62 0f       	add	r22, r18
 d48:	73 1f       	adc	r23, r19
 d4a:	84 1f       	adc	r24, r20
 d4c:	95 1f       	adc	r25, r21
 d4e:	a0 1d       	adc	r26, r0
 d50:	08 95       	ret

00000d52 <__divmodsi4>:
 d52:	05 2e       	mov	r0, r21
 d54:	97 fb       	bst	r25, 7
 d56:	16 f4       	brtc	.+4      	; 0xd5c <__divmodsi4+0xa>
 d58:	00 94       	com	r0
 d5a:	0f d0       	rcall	.+30     	; 0xd7a <__negsi2>
 d5c:	57 fd       	sbrc	r21, 7
 d5e:	05 d0       	rcall	.+10     	; 0xd6a <__divmodsi4_neg2>
 d60:	24 d0       	rcall	.+72     	; 0xdaa <__udivmodsi4>
 d62:	07 fc       	sbrc	r0, 7
 d64:	02 d0       	rcall	.+4      	; 0xd6a <__divmodsi4_neg2>
 d66:	46 f4       	brtc	.+16     	; 0xd78 <__divmodsi4_exit>
 d68:	08 c0       	rjmp	.+16     	; 0xd7a <__negsi2>

00000d6a <__divmodsi4_neg2>:
 d6a:	50 95       	com	r21
 d6c:	40 95       	com	r20
 d6e:	30 95       	com	r19
 d70:	21 95       	neg	r18
 d72:	3f 4f       	sbci	r19, 0xFF	; 255
 d74:	4f 4f       	sbci	r20, 0xFF	; 255
 d76:	5f 4f       	sbci	r21, 0xFF	; 255

00000d78 <__divmodsi4_exit>:
 d78:	08 95       	ret

00000d7a <__negsi2>:
 d7a:	90 95       	com	r25
 d7c:	80 95       	com	r24
 d7e:	70 95       	com	r23
 d80:	61 95       	neg	r22
 d82:	7f 4f       	sbci	r23, 0xFF	; 255
 d84:	8f 4f       	sbci	r24, 0xFF	; 255
 d86:	9f 4f       	sbci	r25, 0xFF	; 255
 d88:	08 95       	ret

00000d8a <__muluhisi3>:
 d8a:	31 d0       	rcall	.+98     	; 0xdee <__umulhisi3>
 d8c:	a5 9f       	mul	r26, r21
 d8e:	90 0d       	add	r25, r0
 d90:	b4 9f       	mul	r27, r20
 d92:	90 0d       	add	r25, r0
 d94:	a4 9f       	mul	r26, r20
 d96:	80 0d       	add	r24, r0
 d98:	91 1d       	adc	r25, r1
 d9a:	11 24       	eor	r1, r1
 d9c:	08 95       	ret

00000d9e <__mulshisi3>:
 d9e:	b7 ff       	sbrs	r27, 7
 da0:	f4 cf       	rjmp	.-24     	; 0xd8a <__muluhisi3>

00000da2 <__mulohisi3>:
 da2:	f3 df       	rcall	.-26     	; 0xd8a <__muluhisi3>
 da4:	82 1b       	sub	r24, r18
 da6:	93 0b       	sbc	r25, r19
 da8:	08 95       	ret

00000daa <__udivmodsi4>:
 daa:	a1 e2       	ldi	r26, 0x21	; 33
 dac:	1a 2e       	mov	r1, r26
 dae:	aa 1b       	sub	r26, r26
 db0:	bb 1b       	sub	r27, r27
 db2:	fd 01       	movw	r30, r26
 db4:	0d c0       	rjmp	.+26     	; 0xdd0 <__udivmodsi4_ep>

00000db6 <__udivmodsi4_loop>:
 db6:	aa 1f       	adc	r26, r26
 db8:	bb 1f       	adc	r27, r27
 dba:	ee 1f       	adc	r30, r30
 dbc:	ff 1f       	adc	r31, r31
 dbe:	a2 17       	cp	r26, r18
 dc0:	b3 07       	cpc	r27, r19
 dc2:	e4 07       	cpc	r30, r20
 dc4:	f5 07       	cpc	r31, r21
 dc6:	20 f0       	brcs	.+8      	; 0xdd0 <__udivmodsi4_ep>
 dc8:	a2 1b       	sub	r26, r18
 dca:	b3 0b       	sbc	r27, r19
 dcc:	e4 0b       	sbc	r30, r20
 dce:	f5 0b       	sbc	r31, r21

00000dd0 <__udivmodsi4_ep>:
 dd0:	66 1f       	adc	r22, r22
 dd2:	77 1f       	adc	r23, r23
 dd4:	88 1f       	adc	r24, r24
 dd6:	99 1f       	adc	r25, r25
 dd8:	1a 94       	dec	r1
 dda:	69 f7       	brne	.-38     	; 0xdb6 <__udivmodsi4_loop>
 ddc:	60 95       	com	r22
 dde:	70 95       	com	r23
 de0:	80 95       	com	r24
 de2:	90 95       	com	r25
 de4:	9b 01       	movw	r18, r22
 de6:	ac 01       	movw	r20, r24
 de8:	bd 01       	movw	r22, r26
 dea:	cf 01       	movw	r24, r30
 dec:	08 95       	ret

00000dee <__umulhisi3>:
 dee:	a2 9f       	mul	r26, r18
 df0:	b0 01       	movw	r22, r0
 df2:	b3 9f       	mul	r27, r19
 df4:	c0 01       	movw	r24, r0
 df6:	a3 9f       	mul	r26, r19
 df8:	70 0d       	add	r23, r0
 dfa:	81 1d       	adc	r24, r1
 dfc:	11 24       	eor	r1, r1
 dfe:	91 1d       	adc	r25, r1
 e00:	b2 9f       	mul	r27, r18
 e02:	70 0d       	add	r23, r0
 e04:	81 1d       	adc	r24, r1
 e06:	11 24       	eor	r1, r1
 e08:	91 1d       	adc	r25, r1
 e0a:	08 95       	ret

00000e0c <_exit>:
 e0c:	f8 94       	cli

00000e0e <__stop_program>:
 e0e:	ff cf       	rjmp	.-2      	; 0xe0e <__stop_program>
